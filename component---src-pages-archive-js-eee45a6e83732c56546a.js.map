{"version":3,"sources":["webpack://aisensiy-s-blog/./src/layouts/base.js","webpack://aisensiy-s-blog/./src/pages/archive.js"],"names":["Base","children","year","Date","getFullYear","className","Link","to","href","target","rel","Archive","groupByYearResult","blogs","result","blog","frontmatter","push","arrayResult","Object","keys","map","key","value","sort","a","b","reverse","groupByYear","data","allMarkdownRemark","nodes","YearItems","id","fields","slug_without_date","date","title"],"mappings":"+KAGe,SAASA,EAAT,GAA6B,IAAbC,EAAY,EAAZA,SACrBC,GAAO,IAAIC,MAAOC,cACxB,OACI,2BACI,uBAAKC,UAAU,8EACX,uBAAKA,UAAU,8CACX,sBAAIA,UAAU,kCAAd,gBACA,2BACI,sBAAIA,UAAU,oBACV,0BAAI,gBAAC,EAAAC,KAAD,CAAMC,GAAG,IAAIF,UAAU,mCAAvB,SACJ,0BAAI,gBAAC,EAAAC,KAAD,CAAMC,GAAG,SAASF,UAAU,mCAA5B,UACJ,0BAAI,gBAAC,EAAAC,KAAD,CAAMC,GAAG,WAAWF,UAAU,mCAA9B,YACJ,0BAAI,qBAAGG,KAAK,8BAA8BC,OAAO,SAASC,IAAI,aAAaL,UAAU,mCAAjF,aAGZ,0BAAQA,UAAU,iBAAlB,KAAqCH,EAArC,4BAGR,uBAAKG,UAAU,kCACVJ,M,m7BClBF,SAASU,EAAT,GAA4B,IACnCC,EAiDR,SAAqBC,GAEnB,IADA,IACA,EADMC,EAAS,GACf,IAAiBD,KAAjB,aAAwB,CAAC,IAAhBE,EAAe,QACjBD,EAAOC,EAAKC,YAAYd,QAC3BY,EAAOC,EAAKC,YAAYd,MAAQ,IAElCY,EAAOC,EAAKC,YAAYd,MAAMe,KAAKF,GAErC,IAAMG,EAAcC,OAAOC,KAAKN,GAAQO,KAAI,SAACnB,GAAD,MAAW,CACrDoB,IAAKpB,EACLqB,MAAOT,EAAOZ,OAOhB,OALAgB,EACGM,MAAK,SAACC,EAAGC,GACR,OAAOD,EAAEH,IAAMI,EAAEJ,OAElBK,UACIT,EAlEmBU,CADc,EAARC,KACWC,kBAAkBC,OAE7D,OACE,gBAAC,IAAD,KACE,2BACE,sBAAI1B,UAAU,6DAAd,WACCO,EAAkBS,KAAI,gBAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,MAAR,OACrB,uBAAKD,IAAKA,GACR,sBAAIjB,UAAU,wDAAwDiB,GACtE,gBAACU,EAAD,CAAWnB,MAAOU,UAQ9B,SAASS,EAAT,GAA+B,IAAVnB,EAAS,EAATA,MACnB,OACE,sBAAIR,UAAU,aACXQ,EAAMQ,KAAI,SAACN,GAAD,OACT,sBAAIV,UAAU,wBAAwBiB,IAAKP,EAAKkB,IAC9C,gBAAC,EAAA3B,KAAD,CAAMC,GAAIQ,EAAKmB,OAAOC,mBACnBpB,EAAKC,YAAYoB,KADpB,MAC6BrB,EAAKC,YAAYqB","file":"component---src-pages-archive-js-eee45a6e83732c56546a.js","sourcesContent":["import React from 'react'\nimport { Link } from \"gatsby\"\n\nexport default function Base({ children }) {\n    const year = new Date().getFullYear()\n    return (\n        <div>\n            <div className=\"md:text-left text-center md:fixed md:w-80 bg-gray-900 md:h-full text-white\">\n                <div className=\"md:absolute bottom-0 py-12 mx-12 space-y-8\">\n                    <h1 className=\"text-6xl font-black font-serif\">Eisen's Blog</h1>\n                    <nav>\n                        <ul className=\"text-md flex-row\">\n                            <li><Link to=\"/\" className=\"leading-7 block hover:underline\">Home</Link></li>\n                            <li><Link to=\"/about\" className=\"leading-7 block hover:underline\">About</Link></li>\n                            <li><Link to=\"/archive\" className=\"leading-7 block hover:underline\">Archive</Link></li>\n                            <li><a href=\"https://github.com/aisensiy\" target=\"_blank\" rel=\"noreferrer\" className=\"leading-7 block hover:underline\">GitHub</a></li>\n                        </ul>\n                    </nav>\n                    <footer className=\"text-gray-400\">Â© {year}. All rights reserved.</footer>\n                </div>\n            </div>\n            <div className=\"md:ml-80 p-8 md:max-w-6xl main\">\n                {children}\n            </div>\n        </div>\n    )\n}\n","import { graphql, Link } from \"gatsby\";\nimport React from \"react\";\nimport Base from \"../layouts/base\";\n\nexport default function Archive({ data }) {\n  const groupByYearResult = groupByYear(data.allMarkdownRemark.nodes);\n\n  return (\n    <Base>\n      <div>\n        <h1 className=\"text-4xl font-extrabold tracking-tight my-4 text-gray-800\">Archive</h1>\n        {groupByYearResult.map(({ key, value }) => (\n          <div key={key}>\n            <h2 className=\"text-3xl font-bold tracking-tight my-4 text-gray-800\">{key}</h2>\n            <YearItems blogs={value} />\n          </div>\n        ))}\n      </div>\n    </Base>\n  );\n}\n\nfunction YearItems({ blogs }) {\n  return (\n    <ul className=\"space-y-1\">\n      {blogs.map((blog) => (\n        <li className=\"list-disc list-inside\" key={blog.id}>\n          <Link to={blog.fields.slug_without_date}>\n            {blog.frontmatter.date} - {blog.frontmatter.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport const query = graphql`\n  query QueryBlogTitles {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      nodes {\n        id\n        frontmatter {\n          title\n          date(formatString: \"MMMM-DD\")\n          year: date(formatString: \"YYYY\")\n        }\n        fields {\n          slug_without_date\n        }\n      }\n    }\n  }\n`;\n\nfunction groupByYear(blogs) {\n  const result = {};\n  for (let blog of blogs) {\n    if (!result[blog.frontmatter.year]) {\n      result[blog.frontmatter.year] = [];\n    }\n    result[blog.frontmatter.year].push(blog);\n  }\n  const arrayResult = Object.keys(result).map((year) => ({\n    key: year,\n    value: result[year],\n  }));\n  arrayResult\n    .sort((a, b) => {\n      return a.key - b.key;\n    })\n    .reverse();\n  return arrayResult;\n}\n"],"sourceRoot":""}