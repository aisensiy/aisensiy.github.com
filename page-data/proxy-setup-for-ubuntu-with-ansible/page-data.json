{
    "componentChunkName": "component---src-templates-blog-js",
    "path": "/proxy-setup-for-ubuntu-with-ansible",
    "result": {"data":{"blog":{"id":"3e518264-2cde-5b53-bd2c-cff578eb64da","html":"<p>最近为一些藏在防火墙里的存储节点做 provision 由于是非常受限的外网访问，必须要通过代理访问网络，因此需要对原来的 ansible 脚本做修改，这里做一个记录。</p>\n<p>看了看 ansible 里面的内容以及后续的 k8s 的流程，无非是如下几个方面需要访问外网：</p>\n<ol>\n<li>curl 一些 github 上的一些公钥</li>\n<li>apt install</li>\n<li>k8s 拉镜像</li>\n</ol>\n<p>那么，对应的就是以下三个方面的代理配置：</p>\n<ol>\n<li>http_proxy / https_proxy 环境变量配置</li>\n<li>apt 不走环境变量的代理，需要单独配置下</li>\n<li>我这里依然使用的 docker 拉镜像的时候也要做独立的配置，不过在一篇 <a href=\"/docker-accelerate\">旧文- 国内环境下更好的 docker 镜像获取</a> 已经介绍过了</li>\n</ol>\n<h2 id=\"设置全局环境变量\" style=\"position:relative;\">设置全局环境变量<a href=\"#%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%80%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\" aria-label=\"设置全局环境变量 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>根据 ansible 的文档 <a href=\"https://docs.ansible.com/ansible/latest/user_guide/playbooks_environment.html\">Setting remote env</a> ansible 提供了 <code>environment</code> 的关键词，可以在 <code>task</code> <code>play</code> 等不同层级添加环境变量：</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> all\n  <span class=\"token key atrule\">remote_user</span><span class=\"token punctuation\">:</span> root\n\n  <span class=\"token key atrule\">tasks</span><span class=\"token punctuation\">:</span>\n\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Install cobbler\n      <span class=\"token key atrule\">ansible.builtin.package</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cobbler\n        <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> present\n      <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">http_proxy</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//proxy.example.com<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> testing\n\n  <span class=\"token key atrule\">roles</span><span class=\"token punctuation\">:</span>\n     <span class=\"token punctuation\">-</span> php\n     <span class=\"token punctuation\">-</span> nginx\n\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">http_proxy</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//proxy.example.com<span class=\"token punctuation\">:</span><span class=\"token number\">8080</span></code></pre></div>\n<p>当然，我们这里就没什么外网，那自然就走一个全局的。</p>\n<h2 id=\"添加-apt-的-proxy-配置\" style=\"position:relative;\">添加 apt 的 proxy 配置<a href=\"#%E6%B7%BB%E5%8A%A0-apt-%E7%9A%84-proxy-%E9%85%8D%E7%BD%AE\" aria-label=\"添加 apt 的 proxy 配置 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>apt 的 proxy 需要放到 <code>/etc/apt/apt.conf.d</code> 下，格式如下:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Acuire::http { Proxy \"http://proxy:1234\" }\nAcuire::https { Proxy \"http://proxy:1234\" }</code></pre></div>\n<p>写成一个 ansible task 就是下面这个样子：</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> add proxy for apt\n  <span class=\"token key atrule\">copy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/apt/apt.conf.d/02proxy\n    <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n      Acquire::http { Proxy \"{{ http_proxy }}\" }\n      Acquire::https { Proxy \"{{ https_proxy }}\" }</span></code></pre></div>\n<p>其中 <code>http_proxy</code> 和 <code>https_proxy</code> 抽出来做为变量后面填写进来。</p>\n<h2 id=\"添加-docker-的-proxy\" style=\"position:relative;\">添加 docker 的 proxy<a href=\"#%E6%B7%BB%E5%8A%A0-docker-%E7%9A%84-proxy\" aria-label=\"添加 docker 的 proxy permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>在上面提到的旧闻中讲过了，启动 docker 的时候需要配置环境变量，放到 systemd 的配置 <code>/etc/systemd/system/docker.service.d/http-proxy.conf</code> 中：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[Service]\nEnvironment=\"HTTP_PROXY=http://proxy:1234\"\nEnvironment=\"HTTPS_PROXY=http://proxy:1234\"</code></pre></div>\n<p>然后需要执行命令 <code>systemctl daemon-reload</code>。</p>\n<h2 id=\"放在一起\" style=\"position:relative;\">放在一起<a href=\"#%E6%94%BE%E5%9C%A8%E4%B8%80%E8%B5%B7\" aria-label=\"放在一起 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>放在一起差不多就是这个样子：</p>\n<p><code>roles/proxy/tasks/main.yml</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">file</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/systemd/system/docker.service.d\n    <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> directory\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> add docker proxy settings\n  <span class=\"token key atrule\">copy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">directory_mode</span><span class=\"token punctuation\">:</span> yes\n    <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/systemd/system/docker.service.d/http<span class=\"token punctuation\">-</span>proxy.conf\n    <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n      [Service]\n      Environment=\"HTTP_PROXY={{ http_proxy }}\"\n      Environment=\"HTTPS_PROXY={{ https_proxy }}\"</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> reload docker\n  <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> docker\n    <span class=\"token key atrule\">state</span><span class=\"token punctuation\">:</span> restarted\n    <span class=\"token key atrule\">daemon_reload</span><span class=\"token punctuation\">:</span> yes\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> add proxy for apt\n  <span class=\"token key atrule\">copy</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">dest</span><span class=\"token punctuation\">:</span> /etc/apt/apt.conf.d/02proxy\n    <span class=\"token key atrule\">content</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n      Acquire::http { Proxy \"{{ http_proxy }}\" }\n      Acquire::https { Proxy \"{{ https_proxy }}\" }</span></code></pre></div>\n<p><code>entry.yml</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">hosts</span><span class=\"token punctuation\">:</span> nodes\n  <span class=\"token key atrule\">vars</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">http_proxy</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://proxy:7890\"</span>\n    <span class=\"token key atrule\">https_proxy</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://proxy:7890\"</span>\n  <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">http_proxy</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://proxy:7890\"</span>\n    <span class=\"token key atrule\">https_proxy</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"http://proxy:7890\"</span>\n  <span class=\"token key atrule\">roles</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">role</span><span class=\"token punctuation\">:</span> proxy</code></pre></div>\n<h2 id=\"更好的方案\" style=\"position:relative;\">更好的方案<a href=\"#%E6%9B%B4%E5%A5%BD%E7%9A%84%E6%96%B9%E6%A1%88\" aria-label=\"更好的方案 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>有没有更好的方案？我觉得有，就是用 <a href=\"https://github.com/xjasonlyu/tun2socks/\">tun2socks</a> 的方案，可以实现以上三个方面的代理设置。不过还没很仔细的折腾，等搞定了再做记录。</p>","tableOfContents":"<ul>\n<li><a href=\"#%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%80%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\">设置全局环境变量</a></li>\n<li><a href=\"#%E6%B7%BB%E5%8A%A0-apt-%E7%9A%84-proxy-%E9%85%8D%E7%BD%AE\">添加 apt 的 proxy 配置</a></li>\n<li><a href=\"#%E6%B7%BB%E5%8A%A0-docker-%E7%9A%84-proxy\">添加 docker 的 proxy</a></li>\n<li><a href=\"#%E6%94%BE%E5%9C%A8%E4%B8%80%E8%B5%B7\">放在一起</a></li>\n<li><a href=\"#%E6%9B%B4%E5%A5%BD%E7%9A%84%E6%96%B9%E6%A1%88\">更好的方案</a></li>\n</ul>","frontmatter":{"title":"使用 ansible 为 ubuntu 设置代理","date":"December 30, 2021"},"excerpt":"最近为一些藏在防火墙里的存储节点做 provision 由于是非常受限的外网访问，必须要通过代理访…"}},"pageContext":{"id":"3e518264-2cde-5b53-bd2c-cff578eb64da"}},
    "staticQueryHashes": ["4202924991"]}