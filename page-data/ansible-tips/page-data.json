{
    "componentChunkName": "component---src-templates-blog-js",
    "path": "/ansible-tips",
    "result": {"data":{"blog":{"id":"fce311d0-83c8-5ff2-962a-cfd5d2b0f3c2","html":"<p>Ansible 是一个自动化部署脚本，通过它可以让很多的 server 执行一系列相同的任务，是大规模集群管理的利器。虽然已经用了好久了，但是之前都没有记录一些使用的技巧。最近终于还是好好的记录了一些，免得自己以后忘得干干净净。</p>\n<h2 id=\"1-如何跳过第一次登陆一个机器时的授权\" style=\"position:relative;\">1. 如何跳过第一次登陆一个机器时的授权<a href=\"#1-%E5%A6%82%E4%BD%95%E8%B7%B3%E8%BF%87%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%99%BB%E9%99%86%E4%B8%80%E4%B8%AA%E6%9C%BA%E5%99%A8%E6%97%B6%E7%9A%84%E6%8E%88%E6%9D%83\" aria-label=\"1 如何跳过第一次登陆一个机器时的授权 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>我们创建一个新的机器第一次登陆的时候会显示如下的东西：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">ssh</span> root@xxx\n\nThe authenticity of <span class=\"token function\">host</span> <span class=\"token string\">'xxxx (xxxxx)'</span> can't be established.\nECDSA key fingerprint is SHA256:xxxx.\nAre you sure you want to <span class=\"token builtin class-name\">continue</span> connecting <span class=\"token punctuation\">(</span>yes/no<span class=\"token punctuation\">)</span>? </code></pre></div>\n<p>如果管理的机器很多，每次都要去确认一下肯定是要了命了。为了避免这种 popup 的问题有如下两种方式：</p>\n<ol>\n<li>\n<p>设置环境变量 <code>ANSIBLE_HOST_KEY_CHECKING=False</code></p>\n</li>\n<li>\n<p>在 ~/.ansible.cfg 或者 playbook 同目录下的配置文件增加</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[defaults]\nhost_key_checking = False</code></pre></div>\n</li>\n</ol>\n<p><a href=\"https://stackoverflow.com/questions/32297456/how-to-ignore-ansible-ssh-authenticity-checking\">How to ignore ansible SSH authenticity checking? - Stack Overflow</a></p>\n<h2 id=\"2-使用-pem-文件访问机器\" style=\"position:relative;\">2. 使用 .pem 文件访问机器<a href=\"#2-%E4%BD%BF%E7%94%A8-pem-%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE%E6%9C%BA%E5%99%A8\" aria-label=\"2 使用 pem 文件访问机器 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-playbook -v <span class=\"token punctuation\">\\</span>\n  -i inventory <span class=\"token punctuation\">\\</span>\n  -u ubuntu --become <span class=\"token punctuation\">\\</span>\n  --private-key<span class=\"token operator\">=~</span>/.ssh/k8s.pem <span class=\"token punctuation\">\\</span>\n  nvidia-docker.yml</code></pre></div>\n<h2 id=\"3-展示更详细的日志\" style=\"position:relative;\">3. 展示更详细的日志<a href=\"#3-%E5%B1%95%E7%A4%BA%E6%9B%B4%E8%AF%A6%E7%BB%86%E7%9A%84%E6%97%A5%E5%BF%97\" aria-label=\"3 展示更详细的日志 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-playbook <span class=\"token punctuation\">..</span>. -vvvv <span class=\"token punctuation\">..</span>.</code></pre></div>\n<h2 id=\"4-使用-ansible-galaxy-初始化-role\" style=\"position:relative;\">4. 使用 ansible galaxy 初始化 role<a href=\"#4-%E4%BD%BF%E7%94%A8-ansible-galaxy-%E5%88%9D%E5%A7%8B%E5%8C%96-role\" aria-label=\"4 使用 ansible galaxy 初始化 role permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>Ansible 里面有一个很重要的概念叫做 role：一个 role 完成一个特定的任务，比如安装 docker、比如安装 nginx，之所以这么拆分当然是为了更好的重用：有些 role 是很多机器都需要的，细粒度的 role 就可以很好的组合在一起使用。比如在安装 kubernetes 集群时所有的机器都需要事先安装 docker，给所有的机器都添加 docker 的 role 即可。</p>\n<p>ansible 有一个 galaxy 有点像是 ansible 版的 github，它一方面提供了 role 的统一格式，另一方面提供了一个放置通用 role 的平台，方便大家去那里直接下载自己所需要的 role。</p>\n<p><code>ansible-galaxy</code> 提供了命令用来创建一个官方的 <code>role</code> 项目：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-galaxy init <span class=\"token punctuation\">[</span>your role name<span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"5-用-ansible-galaxy-获取所有的依赖\" style=\"position:relative;\">5. 用 ansible galaxy 获取所有的依赖<a href=\"#5-%E7%94%A8-ansible-galaxy-%E8%8E%B7%E5%8F%96%E6%89%80%E6%9C%89%E7%9A%84%E4%BE%9D%E8%B5%96\" aria-label=\"5 用 ansible galaxy 获取所有的依赖 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>前文提到 role 可以被复用。那么这里就是其复用的方法了。首先准备一个 <code>roles.yml</code> 文件：</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">src</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/xxx.git\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">src</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/xxx.git</code></pre></div>\n<p>其中每一项是需要使用的 <code>role</code> 的 git 地址。</p>\n<p>然后执行以下命令就可以将指定的 roles 下载到 <code>roles</code> 文件夹下使用了。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-galaxy <span class=\"token function\">install</span> -r roles.yml -p roles --force</code></pre></div>\n<h2 id=\"6-提供额外的参数\" style=\"position:relative;\">6. 提供额外的参数<a href=\"#6-%E6%8F%90%E4%BE%9B%E9%A2%9D%E5%A4%96%E7%9A%84%E5%8F%82%E6%95%B0\" aria-label=\"6 提供额外的参数 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>一些重要的变量是不能保存在 <code>ansible role</code> 脚本里面的，需要在运行的时候传入。这种场景下 <code>--extra-vars</code> 参数就登场了。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-playbook --extra-vars<span class=\"token operator\">=</span><span class=\"token string\">\"@extravars.json\"</span> <span class=\"token punctuation\">..</span>.</code></pre></div>\n<p>其中 <code>extravars.json</code> 是一个 <code>json</code> 文件，通过 <code>@</code> 符号就可以传入。</p>\n<h2 id=\"7-ad-hoc-command\" style=\"position:relative;\">7. Ad-hoc command<a href=\"#7-ad-hoc-command\" aria-label=\"7 ad hoc command permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>有的时候发现原有的 ansible playbook 有瑕疵需要重新更改参数什么的，这个时候如果更新了 ansible playbook 再重新跑一遍实在不方便。这个时候就需要这种 ad-hoc command。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible cpu-worker -i inventory -m copy -a <span class=\"token string\">'src=/etc/hosts dest=/tmp/hosts'</span> -u ubuntu --private-key<span class=\"token operator\">=</span>xxx</code></pre></div>\n<p>如上所示，和 <code>ansible-playbook</code> 一致 <code>-i</code> 后面是 inventory，<code>-u</code> 后面是 username，然后具体使用的 module 在 <code>-m</code> 后面提供，额外的参数用 <code>-a</code> 后面提供。</p>","tableOfContents":"<ul>\n<li><a href=\"#1-%E5%A6%82%E4%BD%95%E8%B7%B3%E8%BF%87%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%99%BB%E9%99%86%E4%B8%80%E4%B8%AA%E6%9C%BA%E5%99%A8%E6%97%B6%E7%9A%84%E6%8E%88%E6%9D%83\">1. 如何跳过第一次登陆一个机器时的授权</a></li>\n<li><a href=\"#2-%E4%BD%BF%E7%94%A8-pem-%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE%E6%9C%BA%E5%99%A8\">2. 使用 .pem 文件访问机器</a></li>\n<li><a href=\"#3-%E5%B1%95%E7%A4%BA%E6%9B%B4%E8%AF%A6%E7%BB%86%E7%9A%84%E6%97%A5%E5%BF%97\">3. 展示更详细的日志</a></li>\n<li><a href=\"#4-%E4%BD%BF%E7%94%A8-ansible-galaxy-%E5%88%9D%E5%A7%8B%E5%8C%96-role\">4. 使用 ansible galaxy 初始化 role</a></li>\n<li><a href=\"#5-%E7%94%A8-ansible-galaxy-%E8%8E%B7%E5%8F%96%E6%89%80%E6%9C%89%E7%9A%84%E4%BE%9D%E8%B5%96\">5. 用 ansible galaxy 获取所有的依赖</a></li>\n<li><a href=\"#6-%E6%8F%90%E4%BE%9B%E9%A2%9D%E5%A4%96%E7%9A%84%E5%8F%82%E6%95%B0\">6. 提供额外的参数</a></li>\n<li><a href=\"#7-ad-hoc-command\">7. Ad-hoc command</a></li>\n</ul>","frontmatter":{"title":"Ansible 一些 tips","date":"April 16, 2018","tags":["ansible","devops"]},"excerpt":"Ansible 是一个自动化部署脚本，通过它可以让很多的 server 执行一系列相同的任务，是大…"}},"pageContext":{"id":"fce311d0-83c8-5ff2-962a-cfd5d2b0f3c2"}},
    "staticQueryHashes": ["4202924991"]}