{"componentChunkName":"component---src-templates-blog-js","path":"/webpack-redux-minify","result":{"data":{"blog":{"id":"31954821-49db-5590-a36d-d92c4768164a","html":"<p>webpack + redux + react 开发前端最终会将所有的 js 依赖打包成为一个（或者几个，因配置不同而不同）js 文件。虽然 <code>webpack</code> 很好的帮助我们解决了依赖的问题，避免了一大堆分散的 js 文件出现在页面里，但是最终打包出来的 js 文件依然会变成所有依赖的 js 的 size 的总和，成为前端页面响应速度的巨大负担。不过通过一些调优可以最大化的减少最终的打包文件的大小并提升运行性能。</p>\n<h2 id=\"dev--production-env\" style=\"position:relative;\"><code>dev</code> &#x26; <code>production</code> env<a href=\"#dev--production-env\" aria-label=\"dev  production env permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>首先，我们可以通过设定不同的 <code>NODE_ENV</code> 环境变量去控制在不同的环境下引入的配置。通过在 <code>webpack.config.js</code> 中读取 <code>process.env.NODE_ENV</code> 可以为 <code>webpack</code> 提供不同的 <code>plugin</code> 用于控制 <code>webpack</code> 的打包机制。下面是一个例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> plugins <span class=\"token operator\">=</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">API_PREFIX</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">API_PREFIX</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">'\"{{API_PREFIX}}\"'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'process.env.NODE_ENV'</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>optimize<span class=\"token punctuation\">.</span>DedupePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>optimize<span class=\"token punctuation\">.</span>OccurenceOrderPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>optimize<span class=\"token punctuation\">.</span>UglifyJsPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    compress<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      warnings<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>DefinePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token constant\">API_PREFIX</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">API_PREFIX</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token string\">'\"{{API_PREFIX}}\"'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'process.env.NODE_ENV'</span><span class=\"token operator\">:</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">||</span> <span class=\"token string\">'development'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>其中 <code>DefinePlugin</code> 可以为 <code>webpack</code> 提供全局变量，这里我们利用它将 <code>node</code> 中的 <code>process.env.NODE_ENV</code> 转换为 <code>webpack</code> 构建最终的 <code>js</code> 时用到的全局变量。如果直接在 <code>webpack</code> 构建时处理的 <code>js</code> 文件中直接引用 <code>nodejs</code> 才能读取的 <code>process.env</code> 是不会有任何效果的。</p>\n<p>然后，我们通过这个 <code>process.env.NODE_ENV</code> 的不同加载不同的 <code>configureStore.js</code>，将在 <code>production</code> 环境下用不到的 <code>redux</code> 中间件清理掉。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">NODE_ENV</span> <span class=\"token operator\">===</span> <span class=\"token string\">'production'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./configureStore.prod'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./configureStore.dev'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code>configureStore.prod.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore<span class=\"token punctuation\">,</span> applyMiddleware <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span>\n<span class=\"token keyword\">import</span> thunk <span class=\"token keyword\">from</span> <span class=\"token string\">'redux-thunk'</span>\n<span class=\"token keyword\">import</span> rootReducer <span class=\"token keyword\">from</span> <span class=\"token string\">'../reducers/index'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">configureStore</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">initialState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>rootReducer<span class=\"token punctuation\">,</span> initialState<span class=\"token punctuation\">,</span> <span class=\"token function\">applyMiddleware</span><span class=\"token punctuation\">(</span>thunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> store<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><code>configureStore.dev.js</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createStore<span class=\"token punctuation\">,</span> applyMiddleware <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'redux'</span>\n<span class=\"token keyword\">import</span> thunk <span class=\"token keyword\">from</span> <span class=\"token string\">'redux-thunk'</span>\n<span class=\"token keyword\">import</span> createLogger <span class=\"token keyword\">from</span> <span class=\"token string\">'redux-logger'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> rootReducer <span class=\"token keyword\">from</span> <span class=\"token string\">'../reducers/index'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">configureStore</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">initialState</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">createStore</span><span class=\"token punctuation\">(</span>rootReducer<span class=\"token punctuation\">,</span> initialState<span class=\"token punctuation\">,</span> <span class=\"token function\">applyMiddleware</span><span class=\"token punctuation\">(</span>thunk<span class=\"token punctuation\">,</span> <span class=\"token function\">createLogger</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> store<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"利用-webpack-插件压缩输出文件\" style=\"position:relative;\">利用 <code>webpack</code> 插件压缩输出文件<a href=\"#%E5%88%A9%E7%94%A8-webpack-%E6%8F%92%E4%BB%B6%E5%8E%8B%E7%BC%A9%E8%BE%93%E5%87%BA%E6%96%87%E4%BB%B6\" aria-label=\"利用 webpack 插件压缩输出文件 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>在各种前端构建工具中都受不了 <code>uglify</code> 的过程，<code>webpack</code> 也不例外。在上文 <code>webpack.config.js</code> 的例子中对 <code>production</code> 环境下的 <code>webpack</code> 就提供了各种插件用于压缩文件。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>optimize<span class=\"token punctuation\">.</span>UglifyJsPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  compress<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    warnings<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"采用-webpack-bundle-size-analyzer-分析依赖大小\" style=\"position:relative;\">采用 <code>webpack-bundle-size-analyzer</code> 分析依赖大小<a href=\"#%E9%87%87%E7%94%A8-webpack-bundle-size-analyzer-%E5%88%86%E6%9E%90%E4%BE%9D%E8%B5%96%E5%A4%A7%E5%B0%8F\" aria-label=\"采用 webpack bundle size analyzer 分析依赖大小 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>如果以上两种优化都做了（尤其是 uglify）那么恭喜你，你的 js 输出文件已经是处理前的三分之一了。我在自己的一个项目中最终的 <code>bundle.js</code> 文件从 <code>2.2MB</code> 降到了 <code>800KB</code> 效果还是非常好的。</p>\n<p>但是 <code>800KB</code> 还是好大的一个文件，如果还想继续优化呢？那就需要有针对性的进行优化了。我们在开发的过场中依赖了乱七八糟的 <code>package</code> 那么是不是能通过减少依赖或者是更换依赖的方式来进一步的减少最终输出文件的大小呢？那么，首先需要知道每个依赖占据的比例了。这里我们采用一个工具 <code>webpack-bundle-size-analyzer</code> 分析所有依赖的大小。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> -g webpack-bundle-size-analyzer</code></pre></div>\n<p>然后</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">webpack --json <span class=\"token operator\">|</span> webpack-bundle-size-analyzer</code></pre></div>\n<p>就可以看到所有依赖的大小占比了：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">react: 667.34 KB (28.9%)\n  fbjs: 33.59 KB (5.03%)\n  &lt;self>: 633.74 KB (95.0%)\nmoment: 454.54 KB (19.7%)\nbootstrap: 273.93 KB (11.9%)\njquery: 251.51 KB (10.9%)\nreact-router: 159.31 KB (6.91%)\n  history: 52.69 KB (33.1%)\n    deep-equal: 3.8 KB (7.22%)\n    query-string: 1.62 KB (3.08%)\n      strict-uri-encode: 182 B (10.9%)\n      &lt;self>: 1.45 KB (89.1%)\n    &lt;self>: 47.26 KB (89.7%)\n  warning: 1.76 KB (1.11%)\n  invariant: 1.48 KB (0.929%)\n  hoist-non-react-statics: 1.35 KB (0.850%)\n  &lt;self>: 102.03 KB (64.0%)\nformsy-react-components: 36.24 KB (1.57%)\n  classnames: 2.58 KB (7.11%)\n  &lt;self>: 33.66 KB (92.9%)\nsuperagent: 30.57 KB (1.32%)\n  component-emitter: 3.11 KB (10.2%)\n  reduce-component: 405 B (1.29%)\n  &lt;self>: 27.06 KB (88.5%)\nformsy-react: 30.55 KB (1.32%)\n  form-data-to-object: 1.19 KB (3.91%)\n  &lt;self>: 29.36 KB (96.1%)\naxios: 29.18 KB (1.26%)\nredux: 25.8 KB (1.12%)\n  lodash: 3.34 KB (12.9%)\n  symbol-observable: 451 B (1.71%)\n  &lt;self>: 22.02 KB (85.4%)\nreact-redux: 25.54 KB (1.11%)\n  lodash: 3.34 KB (13.1%)\n  invariant: 1.48 KB (5.80%)\n  hoist-non-react-statics: 1.35 KB (5.30%)\n  &lt;self>: 19.37 KB (75.8%)\nredux-logger: 8.29 KB (0.359%)\nstyle-loader: 6.99 KB (0.303%)\nwebpack: 3 KB (0.130%)\n  node-libs-browser: 2.76 KB (91.8%)\n    process: 2.76 KB (100%)\n    &lt;self>: 0 B (0.00%)\n  &lt;self>: 251 B (8.17%)\nobject-assign: 1.95 KB (0.0844%)\ncss-loader: 1.47 KB (0.0638%)\nredux-thunk: 306 B (0.0130%)\nsuperagent-prefix: 198 B (0.00838%)\nreact-dom: 63 B (0.00267%)\n&lt;self>: 300.1 KB (13.0%)</code></pre></div>\n<p>这里在优化前的输出情况，其中 <code>react</code> 最大，占整个输出的 <code>28.9%</code>，未压缩前 <code>bundle.js</code> 为 <code>2.24MB</code>。<code>react</code> 是我们的核心依赖，是没什么办法做优化了，但是占比第二高的 <code>moment</code> 仅仅是一个用于日期格式化的工具，占比如此之高实在是可疑。通过搜索其他的可选方案，我将 <code>moment</code> 替换为 <code>date-fns</code>，bundle 文件减小为 <code>1.7MB</code> 压缩后文件减小为 <code>558KB</code>。</p>\n<h2 id=\"最后的最后\" style=\"position:relative;\">最后的最后<a href=\"#%E6%9C%80%E5%90%8E%E7%9A%84%E6%9C%80%E5%90%8E\" aria-label=\"最后的最后 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>如果你真的还觉得太大了...那，就只有靠 nginx 那边做 <code>gzip</code> 优化了...</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gzip  on;\ngzip_types      text/plain application/xml text/css text/html application/javascript;</code></pre></div>\n<h2 id=\"参考\" style=\"position:relative;\">参考<a href=\"#%E5%8F%82%E8%80%83\" aria-label=\"参考 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ol>\n<li><a href=\"https://webpack.github.io/docs/optimization.html\">webpack optimization</a></li>\n<li><a href=\"https://moduscreate.com/optimizing-react-es6-webpack-production-build/\">Optimizing React + ES6 + Webpack Production Build</a></li>\n<li><a href=\"https://stackoverflow.com/questions/17093796/date-formatting-with-without-moment-js\">date-format-without-moment</a></li>\n<li><a href=\"https://stackoverflow.com/questions/30030031/passing-environment-dependent-variables-in-webpack\">passing-environment-dependent-variables-in-webpack</a></li>\n<li><a href=\"https://nginx.org/en/docs/http/ngx_http_gzip_module.html\">nginx gzip</a></li>\n</ol>","tableOfContents":"<ul>\n<li><a href=\"#dev--production-env\"><code>dev</code> &#x26; <code>production</code> env</a></li>\n<li><a href=\"#%E5%88%A9%E7%94%A8-webpack-%E6%8F%92%E4%BB%B6%E5%8E%8B%E7%BC%A9%E8%BE%93%E5%87%BA%E6%96%87%E4%BB%B6\">利用 <code>webpack</code> 插件压缩输出文件</a></li>\n<li><a href=\"#%E9%87%87%E7%94%A8-webpack-bundle-size-analyzer-%E5%88%86%E6%9E%90%E4%BE%9D%E8%B5%96%E5%A4%A7%E5%B0%8F\">采用 <code>webpack-bundle-size-analyzer</code> 分析依赖大小</a></li>\n<li><a href=\"#%E6%9C%80%E5%90%8E%E7%9A%84%E6%9C%80%E5%90%8E\">最后的最后</a></li>\n<li><a href=\"#%E5%8F%82%E8%80%83\">参考</a></li>\n</ul>","frontmatter":{"title":"Webpack and Redux, minify the output bundle","date":"May 29, 2016"},"excerpt":"webpack + redux + react 开发前端最终会将所有的 js 依赖打包成为一个（或…"}},"pageContext":{"id":"31954821-49db-5590-a36d-d92c4768164a"}},"staticQueryHashes":["4202924991"]}