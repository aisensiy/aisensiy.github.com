{
    "componentChunkName": "component---src-templates-blogs-js",
    "path": "/page/1",
    "result": {"data":{"site":{"siteMetadata":{"title":"eisen-s-blog"}},"blogs":{"nodes":[{"id":"d488f3b7-55be-5fa2-b384-68c41736b044","frontmatter":{"title":"尝试 clickhouse operator","date":"2022 January-26"},"html":"<p>Production 级别的 clickhouse 不是随便就能搞出来的，需要对其有更深入的理解。这篇主题只是针对如何在 k8s 里快速搭建一还行的 clickhouse。主要是为了实现整个系统不对外有额外的依赖，所有的依赖服务都包含在 k8s 集群中。和 <a href=\"/mysql-operator\">将 MySQL 通过 presslabs/mysql-operator 部署到 k8s 内部</a> 这篇对于 mysql 的处理非常类似。</p>\n<h2 id=\"诉求\" style=\"position:relative;\">诉求<a href=\"#%E8%AF%89%E6%B1%82\" aria-label=\"诉求 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>之前用于测试的 clickhouse 是一非常随便的 deployment 实现，其主要缺点有如下几个：</p>\n<ol>\n<li>没有考虑如何修改配置，如果需要额外的配置只好自己想办法 mount 一个文件到指定路径</li>\n<li>没有初始化数据库的流程，只能自己手动去创建数据库</li>\n<li>不支持高可用，也无法扩容</li>\n</ol>\n<p>其中 3 的诉求并不强烈，毕竟在测试阶段对这部分的要求没有那么高，而且如果真的想要高可用可能甚至都不应该将 clickhouse 放进 k8s 里。不过 1 2 的诉求还是很强烈的。那么我这里的工作也都是针对 1 2 两项进行的。</p>\n<h2 id=\"方案\" style=\"position:relative;\">方案<a href=\"#%E6%96%B9%E6%A1%88\" aria-label=\"方案 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>这里采用了 <a href=\"https://github.com/Altinity/clickhouse-operator\">Altinity/clickhouse-operator</a> 这个方案。该方案不仅仅是完美解决了 1 2 两项问题，甚至是 3 也有做了还不错的处理。不过我这里就没有测试扩容和高可用了，主要测试的是 1 2 两部分。</p>\n<h3 id=\"安装-operator\" style=\"position:relative;\">安装 operator<a href=\"#%E5%AE%89%E8%A3%85-operator\" aria-label=\"安装 operator permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>按照<a href=\"https://github.com/Altinity/clickhouse-operator/blob/master/docs/quick_start.md\">文档</a>安装 operator:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> -s https://raw.githubusercontent.com/Altinity/clickhouse-operator/master/deploy/operator-web-installer/clickhouse-operator-install.sh <span class=\"token operator\">|</span> <span class=\"token assign-left variable\">OPERATOR_NAMESPACE</span><span class=\"token operator\">=</span>infra <span class=\"token function\">bash</span></code></pre></div>\n<p>这里我把 operator 安装的 namespace 放到了 infra。</p>\n<h3 id=\"提供部署-clickhouse-的-crd\" style=\"position:relative;\">提供部署 clickhouse 的 crd<a href=\"#%E6%8F%90%E4%BE%9B%E9%83%A8%E7%BD%B2-clickhouse-%E7%9A%84-crd\" aria-label=\"提供部署 clickhouse 的 crd permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ConfigMap\"</span>\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"serving-db-mounted-configmap\"</span>             <span class=\"token comment\"># [5]</span>\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">01_create_databases.sh</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n    #!/bin/bash\n    set -e\n    clickhouse client -n &lt;&lt;-EOSQL\n      CREATE DATABASE IF NOT EXISTS serving;\n    EOSQL</span>\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"clickhouse.altinity.com/v1\"</span>\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ClickHouseInstallation\"</span>\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"serving-db\"</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">configuration</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">settings</span><span class=\"token punctuation\">:</span>                                      <span class=\"token comment\"># [5]</span>\n      <span class=\"token key atrule\">max_concurrent_queries</span><span class=\"token punctuation\">:</span> <span class=\"token number\">400</span>\n    <span class=\"token key atrule\">clusters</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"serving-db\"</span>\n        <span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">shardsCount</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n          <span class=\"token key atrule\">replicasCount</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">defaults</span><span class=\"token punctuation\">:</span>                                       <span class=\"token comment\"># [1]</span>\n    <span class=\"token key atrule\">templates</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">podTemplate</span><span class=\"token punctuation\">:</span> pod<span class=\"token punctuation\">-</span>template\n      <span class=\"token key atrule\">dataVolumeClaimTemplate</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">-</span>volume<span class=\"token punctuation\">-</span>template\n      <span class=\"token key atrule\">logVolumeClaimTemplate</span><span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">-</span>volume<span class=\"token punctuation\">-</span>template\n      <span class=\"token key atrule\">serviceTemplate</span><span class=\"token punctuation\">:</span> svc<span class=\"token punctuation\">-</span>template\n  <span class=\"token key atrule\">templates</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">serviceTemplates</span><span class=\"token punctuation\">:</span>                             <span class=\"token comment\"># [2]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> svc<span class=\"token punctuation\">-</span>template\n        <span class=\"token key atrule\">generateName</span><span class=\"token punctuation\">:</span> clickhouse<span class=\"token punctuation\">-</span><span class=\"token punctuation\">{</span>chi<span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8123</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> tcp\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9000</span>\n          <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP\n    <span class=\"token key atrule\">podTemplates</span><span class=\"token punctuation\">:</span>                                 <span class=\"token comment\"># [3]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> pod<span class=\"token punctuation\">-</span>template\n        <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> clickhouse\n              <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> yandex/clickhouse<span class=\"token punctuation\">-</span>server<span class=\"token punctuation\">:</span>22.1.3\n              <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> serving<span class=\"token punctuation\">-</span>db<span class=\"token punctuation\">-</span>configmap<span class=\"token punctuation\">-</span>volume\n                  <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /docker<span class=\"token punctuation\">-</span>entrypoint<span class=\"token punctuation\">-</span>initdb.d\n          <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> serving<span class=\"token punctuation\">-</span>db<span class=\"token punctuation\">-</span>configmap<span class=\"token punctuation\">-</span>volume\n              <span class=\"token key atrule\">configMap</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> serving<span class=\"token punctuation\">-</span>db<span class=\"token punctuation\">-</span>mounted<span class=\"token punctuation\">-</span>configmap\n\n    <span class=\"token key atrule\">volumeClaimTemplates</span><span class=\"token punctuation\">:</span>                         <span class=\"token comment\"># [4]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">-</span>volume<span class=\"token punctuation\">-</span>template\n        <span class=\"token key atrule\">reclaimPolicy</span><span class=\"token punctuation\">:</span> Retain\n        <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> local\n          <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> ReadWriteOnce\n          <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 50Gi\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">-</span>volume<span class=\"token punctuation\">-</span>template\n        <span class=\"token key atrule\">reclaimPolicy</span><span class=\"token punctuation\">:</span> Retain\n        <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> local\n          <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> ReadWriteOnce\n          <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 10Gi</code></pre></div>\n<p>这个 yaml 是我集成了自己的所有诉求的最终版本，可以看到它主要包含两个部分：</p>\n<ol>\n<li><code>serving-db-mounted-configmap</code> 其中包含了初始化数据库的内容，这部分不是必须要，只有需要初始化数据库的时候才有</li>\n<li><code>ClickHouseInstallation</code> 这个是 clickhouse operator 所提供的 crd 顾名思义，就用于创建 clickhouse 核心 crd。具体每一个东西什么意思还是看文档吧，我这里主要介绍下目前实现了上述诉求相关的内容</li>\n</ol>\n<p>我在上面做了注释标记（[1] 这样子），下面我一个个做介绍。</p>\n<ol>\n<li>可以看到 <code>defaults.templates</code> 下定义了一系列的模板（Template）其包含了\n<ol>\n<li><code>serviceTemplate</code>: 暴露 clickhouse 的 service 的结构</li>\n<li><code>podTemplate</code>: 创建 clickhouse 自身的 pod 的结构</li>\n<li><code>dataVolumeClaimTemplate</code>: 提供给 clickhouse 的存储的结构</li>\n</ol>\n</li>\n<li><code>serviceTemplate</code> 其默认的类型为 <code>LoadBalancer</code> 由于我们的集群里不支持也不希望使用这个类型，因此这里做了自定义将其修改为了 <code>ClusterIP</code></li>\n<li><code>podTemplate</code> 中首先选择 image 版本为 22.1.3 其次增加了一个额外的 volumeMounts 到路径 /docker-entrypoint-initdb.d 这样做是为了利用该 operator 所提供的钩子，实现数据库的初始，具体文档参见 <a href=\"https://github.com/Altinity/clickhouse-operator/blob/master/docs/chi-examples/02-templates-07-bootstrap-schema.yaml\">02-templates-07-bootstrap-schema.yaml</a></li>\n<li><code>volumeClaimTemplates</code> 分别定义了 clikchouse 的日志和数据的 PV</li>\n<li><code>configuration.settings</code> 可以自定义 clickhouse 的配置，这里我仅仅是修改了 <code>max_concurrent_queries</code> 这个配置，这里所写的配置最终会被合并到 clickhouse 的配置中</li>\n</ol>\n<h2 id=\"遇到的问题\" style=\"position:relative;\">遇到的问题<a href=\"#%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98\" aria-label=\"遇到的问题 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>clickhouse operator 很好的解决了我目前的两大诉求，不过在使用过程中也遇到了一个额外的问题：clickhouse 默认用户 default 无法通过 kubernete dns 去访问 clickhouse。仔细查看了下配置，发现其配置只支持 <code>&#x3C;service-name>.&#x3C;namespace>.svc.cluster.local</code> 的域名访问。这样做有两个明显的问题：</p>\n<ol>\n<li>无法使用类似于 <code>&#x3C;service-name>.&#x3C;namespace></code> 这样的 k8s 内支持的短域名访问</li>\n<li>如果我在创建 k8s 集群时就修改了默认的域名配置（即不采用 cluster.local），那么这域名是一定不起作用的，甚至可以认为这个配置是一个 bug</li>\n</ol>\n<p>解决的办法也很简单，就是不要用这个 <code>default</code> 用户，去创建一个新的用户并且设置可以访问的 ip 即可。</p>","fields":{"slug_without_date":"/clickhouse-operator-get-started"}},{"id":"1dd46bc1-353d-5a52-95f6-1572d359a34e","frontmatter":{"title":"vim 里自动更新 markdown 格式","date":"2022 January-22"},"html":"<h2 id=\"问题\" style=\"position:relative;\">问题<a href=\"#%E9%97%AE%E9%A2%98\" aria-label=\"问题 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>写 blog 的时候经常需要做中英文混排，然后这个混排为了美观需要在中和英文之间添加空格。现在形成习惯了，看到别人没有在中英文混排里添加空格都觉得有点难受。不过之前这个格式要求都靠自己敲空格敲出来的，感觉效率有点低下，恰巧发现了 <a href=\"https://github.com/huacnlee/autocorrect\">autocorrect</a> 这个工具，可以实现这个功能，这里尝试把它和我写 blog 用的 neovim 集成下实现自动格式化的功能。</p>\n<h2 id=\"思路\" style=\"position:relative;\">思路<a href=\"#%E6%80%9D%E8%B7%AF\" aria-label=\"思路 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>首先 <code>autocorrect</code> 本身已经是一个二进制文件了，通过如下命令可以实现对文件的处理：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ autocorrect --fix <span class=\"token operator\">&lt;</span>filepath<span class=\"token operator\">></span></code></pre></div>\n<p>因为 vim 有一些插件可以实现在保存的时候对文件进行格式化而 autocorrect 的处理也可以认为是一种格式化因此思路就很一致了。不过相较于很多格式化工具可以以文本内容的方式传递，autocorrect 只能对文件做修改，流程上会稍微有一点区别。这里我列一下集成思路：</p>\n<ol>\n<li>确定内容更新的时机，由于 autocorrect 只能对文件做处理（而不是传递一段文本）因此必须要在文件更新后再次执行该命令对文件做二次刷新，vim 有一个 <code>autocmd</code> 的命令，可以某些重要的事件发生时（或者发生前后）执行一系列命令，这里就需要监听 <code>BufWritePost</code> 即当 Buf 写成功后执行一个命令</li>\n<li>文件被 autocorrect 更新后需要重新读取，否则当前看到的内容就不是已经做过格式化的内容了，vim 中通过命令 edit 可以将文件重新读取，redraw 命令则可刷新视图</li>\n<li>目前只考虑对 markdown 文件做上述处理，需要首先判别文件类别，只有符合的类别才能做上述处理</li>\n</ol>\n<h2 id=\"具体实现方式\" style=\"position:relative;\">具体实现方式<a href=\"#%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F\" aria-label=\"具体实现方式 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>我使用的是 neovim 这里就按照它的配置结果做了实现，vim 的实现也是类似的，只是具体的目录结构会有略微区别而已。</p>\n<p><a href=\"https://github.com/aisensiy/dotfiles/blob/master/nvim/after/ftplugin/markdown.vim\"><code>.config/nvim/after/ftplugin/markdown.vim</code></a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"vim\"><pre class=\"language-vim\"><code class=\"language-vim\"><span class=\"token keyword\">function</span><span class=\"token operator\">!</span> <span class=\"token function\">MarkdownFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">silent</span> <span class=\"token operator\">!</span>autocorrect <span class=\"token operator\">-</span><span class=\"token operator\">-</span><span class=\"token keyword\">fix</span> <span class=\"token string\">'%:p'</span> <span class=\"token comment\">\"3</span>\n  <span class=\"token keyword\">let</span> <span class=\"token keyword\">view</span> <span class=\"token operator\">=</span> <span class=\"token function\">winsaveview</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>        <span class=\"token comment\">\"4 </span>\n  <span class=\"token keyword\">silent</span> <span class=\"token keyword\">edit</span>                     <span class=\"token comment\">\"5</span>\n  <span class=\"token keyword\">call</span> <span class=\"token function\">winrestview</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">view</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">redraw</span><span class=\"token operator\">!</span>                         <span class=\"token comment\">\"6</span>\n<span class=\"token keyword\">endfunction</span>\n\naugroup markdownFormat            <span class=\"token comment\">\"1</span>\n  <span class=\"token builtin\">autocmd</span><span class=\"token operator\">!</span>                        <span class=\"token comment\">\"2</span>\n  <span class=\"token builtin\">autocmd</span> BufWritePost <span class=\"token operator\">*</span> <span class=\"token keyword\">if</span> &amp;<span class=\"token keyword\">filetype</span> <span class=\"token operator\">==#</span> <span class=\"token string\">'markdown'</span> | <span class=\"token keyword\">call</span> <span class=\"token function\">MarkdownFormat</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> | <span class=\"token keyword\">endif</span> <span class=\"token comment\">\"7</span>\naugroup END</code></pre></div>\n<p>具体做一些解释：</p>\n<ol>\n<li><code>augroup</code> 相当于设置命名空间保证这个 autocmd 不影响其他的 autocmd</li>\n<li><code>autocmd!</code> 是清理当前 <code>augroup</code> 下的所有 <code>autocmd</code> 没有这命令会发现不知不觉每次保存的时候 autocorrect 会执行多次，具体什么原因我尚不清楚，毕这也是我第一次折腾这些命令，后续如果有更多了解会做更多记录</li>\n<li><code>slient !autocorrent --fix '%:p'</code>\n<ol>\n<li>执行外部的命令要加 <code>!</code></li>\n<li>添加 <code>slient</code> 是为了不要展示其执行的结果，我们只关心它执行了，不想看到它的返回内容</li>\n<li><code>'%:p'</code> 就是当前文件的绝对路径</li>\n</ol>\n</li>\n<li><code>winsaveview</code> 是保当前视图的一些信息，并且在重新加载文件后恢复，为的是不要让正在编辑的文件的视图位置、光标位置发生跳动提升体验</li>\n<li><code>slient edit</code> 是重新加载文件</li>\n<li><code>redraw!</code> 是刷当前视图</li>\n<li><code>if &#x26;filetype ==# 'markdown'</code> 是判断当前文件格式是否为 markdown 只有是 markdown 的时候才这行这个 autocmd</li>\n</ol>\n<h2 id=\"效果\" style=\"position:relative;\">效果<a href=\"#%E6%95%88%E6%9E%9C\" aria-label=\"效果 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>\n\t\t<video\n\t\t\tsrc=/videos/vim-autocorrect-integration.mp4\n\t\t\twidth=\"1200\"\n\t\t\theight=\"auto\"\n\t\t\tpreload=\"auto\"\n\t\t\tmuted=\"false\"\n\t\t\ttitle=\"/videos/vim-autocorrect-integration.mp4\"\n\t\t\t\n\t\t\tplaysinline\n\t\t\tcontrols\n\t\t\t\n\t\t></video>\n\t</p>","fields":{"slug_without_date":"/auto-update-content-in-markdown"}},{"id":"ab7349fa-d565-51c5-8f7f-0890065a2f93","frontmatter":{"title":"处理 k8s 证书过期","date":"2022 January-18"},"html":"<h2 id=\"简单记录\" style=\"position:relative;\">简单记录<a href=\"#%E7%AE%80%E5%8D%95%E8%AE%B0%E5%BD%95\" aria-label=\"简单记录 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>k8s 为了鼓励大家更新，其 kubeadm 默认的证书有效期为 1 年，任何 k8s 版本的更新都会触发证书的更新。如果证书过期了可以按照如下方式处理：</p>\n<ol>\n<li>如果发现自己本地 kubectl 无法访问集群并报错就很有可能是证书过期了，登陆任意一台 master 执行命令 <code>kubeadm certs check-expiration</code> 可以查看证书的有效期，如果报错没有命令 <code>certs</code> 那么可以尝试命令 <code>kubeadm alpha certs ...</code></li>\n<li>过期后可以用命令 <code>kubeadm certs renew all</code> 更新所有证书</li>\n<li>更新后需要将 <code>/etc/kubernetes/manifests/</code> 挪走，比如重命名为 <code>manifests.1</code> 20 秒以上，等待 static pod 全部都关闭了，然后重命名回来，这个步骤就是强迫所有的 static pod 重启，<a href=\"https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-certs/#manual-certificate-renewal\">官网文档</a> 就是这么建议操作的</li>\n<li>如果是 HA 高可用模式，那么需要将每一台 master 都这么操作一下</li>\n<li>将新的 <code>/etc/kubernetes/admin.conf</code> 拷贝到自己的电脑，并将其其中的 api-server 的访问地址修改成从自己电脑可以访问的地址即可，然后具体的管理可以参考 <a href=\"/kubeconfig-management\">维护一大堆 kubeconfig 的一些实践</a></li>\n</ol>\n<h2 id=\"更好的办法\" style=\"position:relative;\">更好的办法<a href=\"#%E6%9B%B4%E5%A5%BD%E7%9A%84%E5%8A%9E%E6%B3%95\" aria-label=\"更好的办法 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>这样做现在并不是最好的方法，目前可以改进的方式有如下几个：</p>\n<ol>\n<li>按照官方推荐，更频繁的升级 k8s 避免自己的集群版本掉队到无法维护，这应该是最好的方法，当然听起来成本也高一些</li>\n<li>简单粗暴，修改对应版本的 kubeadm 源码，将 renew 时间改成什么 100 年之类的，然后用这个编译的版本去 renew 就是 100 年有效期了</li>\n<li><a href=\"https://github.com/fanux/sealos\">https://github.com/fanux/sealos</a> <strong>可能是不错的方案，具体还没看</strong></li>\n</ol>\n<h2 id=\"资料\" style=\"position:relative;\">资料<a href=\"#%E8%B5%84%E6%96%99\" aria-label=\"资料 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ol>\n<li><a href=\"https://kubernetes.io/docs/tasks/administer-cluster/kubeadm/kubeadm-certs/\">Certificate Management with kubeadm</a></li>\n<li><a href=\"https://cloud.tencent.com/developer/article/1650657\">kubeadm 集群修改证书时间到 99 年</a></li>\n</ol>","fields":{"slug_without_date":"/kubernetes-certs-renew"}}],"pageInfo":{"hasPreviousPage":false,"currentPage":1,"pageCount":41}}},"pageContext":{"limit":3,"skip":0}},
    "staticQueryHashes": []}