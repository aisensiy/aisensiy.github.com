{
    "componentChunkName": "component---src-templates-blogs-js",
    "path": "/page/14",
    "result": {"data":{"site":{"siteMetadata":{"title":"eisen-s-blog"}},"blogs":{"nodes":[{"id":"b253cacb-f67c-558f-ab7f-85708192a268","frontmatter":{"title":"docker 存储","date":"2018 May-25"},"html":"<p>由于自己接触 docker 的时候和现在的 docker 不少的 api 已经有所变化，还是需要更新一下自己的知识。这篇文章大部分源自 docker 的官方文档，然后还有部分自己添油加醋。</p>\n<p>在 docker 中所有的文件是存储在容器的 <code>writable container layer</code>。存在以下的问题：</p>\n<ul>\n<li>容器里的数据不好拿出来</li>\n<li>在容器里写依赖于 <code>storage driver</code> 采用了 <code>union filesystem</code> 效率低下</li>\n</ul>\n<p>然而 docker 提供了可以直接往 host 机器写内容的方式：</p>\n<ol>\n<li>volumes</li>\n<li>bind mounts</li>\n<li>tmpfs</li>\n</ol>\n<p>采用这些方式，即使容器关了甚至删除了数据依然不会丢失。</p>\n<h2 id=\"选择适合的数据绑定方式\" style=\"position:relative;\">选择适合的数据绑定方式<a href=\"#%E9%80%89%E6%8B%A9%E9%80%82%E5%90%88%E7%9A%84%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A%E6%96%B9%E5%BC%8F\" aria-label=\"选择适合的数据绑定方式 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>首先不论是采用哪种方式，在容器里看起来都是一样的。</p>\n<ul>\n<li>Volume 将数据存储在 host 但是其实是由 docker 管理的 <code>/var/lib/docker/volumes</code> 非 docker 无法使用</li>\n<li>Bind mounts 是可以将数据随意存储在任意 host system 文件系统中，任何非 docker 应用也有权利对其进行使用</li>\n<li>tmpfs mounts 将文件存储在内存中</li>\n</ul>\n<h2 id=\"更多详情\" style=\"position:relative;\">更多详情<a href=\"#%E6%9B%B4%E5%A4%9A%E8%AF%A6%E6%83%85\" aria-label=\"更多详情 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<h3 id=\"volume\" style=\"position:relative;\">Volume<a href=\"#volume\" aria-label=\"volume permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>Volume 可以通过 <code>docker volume create</code> 显式创建，当然 docker 也可以在运行的时候创建 volume（比如在 <code>Dockerfile</code> 里面有 <code>VOLUME</code> 语法时如果没有没有显式绑定 volume 那么就会默认创建一个新的 volume）。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker volume create data\ndocker run -v data:/data ...</code></pre></div>\n<p><strong>注意</strong> <code>docker volume inspect xxx</code> 会得到如下的结果：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[\n    {\n        \"CreatedAt\": \"2018-05-22T07:53:58Z\",\n        \"Driver\": \"local\",\n        \"Labels\": null,\n        \"Mountpoint\": \"/var/lib/docker/volumes/test/_data\",\n        \"Name\": \"test\",\n        \"Options\": {},\n        \"Scope\": \"local\"\n    }\n]</code></pre></div>\n<p>其存储的位置为 <code>/var/lib/docker/volumes/test/_data</code> 但是在 Mac OS 下你会发现根本没有这个目录，那是因为 Mac 下的 docker 还是以 linux 虚拟机的形式运行的，你所看到的是其虚拟机下的目录而不是 Mac 下的目录。</p>\n<h3 id=\"bind-mounts\" style=\"position:relative;\">Bind mounts<a href=\"#bind-mounts\" aria-label=\"bind mounts permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>其功能相对 volume 比较有限。但是其好处是可以绑定任意的外部目录给 docker，尤其是在做一些外部数据共享给 docker 的时候非常适合。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker run -v /tmp/data:/data:ro ...</code></pre></div>\n<h3 id=\"tmpfs\" style=\"position:relative;\">Tmpfs<a href=\"#tmpfs\" aria-label=\"tmpfs permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>我自己是没有直接使用过。基本就是用于沙盒环境吧。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">docker run --tmpfs /data ...</code></pre></div>\n<h2 id=\"注意\" style=\"position:relative;\">注意<a href=\"#%E6%B3%A8%E6%84%8F\" aria-label=\"注意 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>两个特殊的场景：</p>\n<ol>\n<li>如果你 mount 一个 empty volume 到一个 container 中已经存在的文件夹，那么 container 会将容器目录中的内容拷贝到这个空的 volume 里面</li>\n<li>如果你使用 bind mount 或者一个非空的 volume 绑定到容器中某一个目录，那么目录里面的东西就会隐藏而只能看到 bind mount 或者 volume 里面的内容。注意，原有的内容不是被删除了而仅仅是被隐藏了</li>\n</ol>\n<h2 id=\"相关文献\" style=\"position:relative;\">相关文献<a href=\"#%E7%9B%B8%E5%85%B3%E6%96%87%E7%8C%AE\" aria-label=\"相关文献 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ol>\n<li><a href=\"https://docs.docker.com/storage/volumes/\">Docker Volumes</a></li>\n<li><a href=\"https://docs.docker.com/storage/bind-mounts/\">Use bind mounts</a></li>\n<li><a href=\"https://docs.docker.com/storage/volumes/\">Use Volumes</a></li>\n</ol>","fields":{"slug_without_date":"/docker-storage"}},{"id":"a2bf670d-65be-5882-8608-d811b6460bb0","frontmatter":{"title":"用 kubeadm 部署 aws 环境下的 kubernetes","date":"2018 April-24"},"html":"<p>最近一个多月开始折腾在 <strong>国内</strong> 环境部署 kubernetes 集群。是的，确实这还是一个工作内容，和直接在什么 aws googlecloud 或者是 rancher 2.0 直接点点就能创建有一个集群不一样。之所以还要付诸这样的精力去做这件事有两个原因：</p>\n<ol>\n<li>kubernetes 默认部署安装依赖于很多 google 的域名，而因为特殊的国内网络环境，那些自动执行创建集群的工具默认都是不适用的，我不得不把 kubernetes 集群部署搞得一清二楚才能明白具体哪里去 hack 那些被 block 的资源</li>\n<li>我们有自己搭建 bare metal 集群的需求，而那些可以随便点点就能构建集群的方式都是支持公有云的方案</li>\n</ol>\n<p>不过因为我刚刚搞定了 aws 环境下 kubernetes 的部署，趁热打铁我就先记录一下这一部分。</p>\n<h2 id=\"aws-环境下-kubernetes-的特殊性\" style=\"position:relative;\">aws 环境下 kubernetes 的特殊性<a href=\"#aws-%E7%8E%AF%E5%A2%83%E4%B8%8B-kubernetes-%E7%9A%84%E7%89%B9%E6%AE%8A%E6%80%A7\" aria-label=\"aws 环境下 kubernetes 的特殊性 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>k8s 有一个 <code>cloud-provider</code> 的概念，其目的是通过和一些公有云的服务集成以达到更好的功能。</p>\n<p>aws 环境下的 k8s 是指 k8s 集成了部分 aws 的服务方便集群的使用。到目前为止，我所知道的包含如下内容：</p>\n<ol>\n<li>ebs 做 persistent volume</li>\n<li>通过 elb 为 <code>LoadBalancer</code> 类型的 service 绑定一个外部域名可以直接通过域名去访问</li>\n</ol>\n<p>而这篇文章则是重点介绍如何让 k8s 去支持这些特性，当然会缺少 kubeadm 一些信息，会在另外一篇介绍。</p>\n<h2 id=\"配置\" style=\"position:relative;\">配置<a href=\"#%E9%85%8D%E7%BD%AE\" aria-label=\"配置 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>k8s 现在已经相当庞大，大的跟个操作系统似的。但是很遗憾其文档的成熟度还处于初级阶段，我甚至找不到 <code>cloud-provider</code> 配置的一些细节，唯一可靠的文档似乎就是代码，但是一不小心打开一个三四千行的 golang 文件我也是一脸迷茫...最后在一个诡异的 github issue 里面找到了一个 googledoc 解释了 <code>cloud-provider=aws</code> 的一些细节。</p>\n<h3 id=\"为-ec2-添加-iam-权限\" style=\"position:relative;\">为 EC2 添加 IAM 权限<a href=\"#%E4%B8%BA-ec2-%E6%B7%BB%E5%8A%A0-iam-%E6%9D%83%E9%99%90\" aria-label=\"为 ec2 添加 iam 权限 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>为了让 k8s 可以操纵 aws 的资源需要为 ec2 添加权限：</p>\n<h4 id=\"for-master\" style=\"position:relative;\">for master<a href=\"#for-master\" aria-label=\"for master permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token key atrule\">\"Version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2012-10-17\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token key atrule\">\"Statement\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token key atrule\">\"Effect\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Allow\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token key atrule\">\"Action\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token string\">\"ec2:*\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"elasticloadbalancing:*\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:GetAuthorizationToken\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:BatchCheckLayerAvailability\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:GetDownloadUrlForLayer\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:GetRepositoryPolicy\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:DescribeRepositories\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:ListImages\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:BatchGetImage\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"autoscaling:DescribeAutoScalingGroups\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"autoscaling:UpdateAutoScalingGroup\"</span>\n\t\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token key atrule\">\"Resource\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"*\"</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4 id=\"for-worker\" style=\"position:relative;\">for worker<a href=\"#for-worker\" aria-label=\"for worker permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">{</span>\n\t<span class=\"token key atrule\">\"Version\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"2012-10-17\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token key atrule\">\"Statement\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n\t\t<span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token key atrule\">\"Effect\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Allow\"</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token key atrule\">\"Action\"</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n\t\t\t\t<span class=\"token string\">\"ec2:Describe*\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:GetAuthorizationToken\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:BatchCheckLayerAvailability\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:GetDownloadUrlForLayer\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:GetRepositoryPolicy\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:DescribeRepositories\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:ListImages\"</span><span class=\"token punctuation\">,</span>\n\t\t\t\t<span class=\"token string\">\"ecr:BatchGetImage\"</span>\n\t\t\t<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n\t\t\t<span class=\"token key atrule\">\"Resource\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"*\"</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"为-ec2-机器添加标签\" style=\"position:relative;\">为 ec2 机器添加标签<a href=\"#%E4%B8%BA-ec2-%E6%9C%BA%E5%99%A8%E6%B7%BB%E5%8A%A0%E6%A0%87%E7%AD%BE\" aria-label=\"为 ec2 机器添加标签 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>为了识别具体哪些 ec2 是集群的一部分需要为每个 ec2 添加一个 <code>KubernetesCluster</code> 的 tag。</p>\n<h3 id=\"更新-kubelet-config\" style=\"position:relative;\">更新 kubelet config<a href=\"#%E6%9B%B4%E6%96%B0-kubelet-config\" aria-label=\"更新 kubelet config permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>为了支持 cloud-provider 首先需要在 kubelet 的配置里做相应修改，为 <code>/etc/systemd/system/kubelet.service.d/10-kubeadm.conf</code> 添加 <code>KUBELET_EXTRA_ARGS</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[Service]\nEnvironment=\"KUBELET_EXTRA_ARGS=--cloud-provider=aws</code></pre></div>\n<h3 id=\"更新-kubeadm-配置\" style=\"position:relative;\">更新 kubeadm 配置<a href=\"#%E6%9B%B4%E6%96%B0-kubeadm-%E9%85%8D%E7%BD%AE\" aria-label=\"更新 kubeadm 配置 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> kubeadm.k8s.io/v1alpha1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> MasterConfiguration\n<span class=\"token key atrule\">cloudProvider</span><span class=\"token punctuation\">:</span> aws\n<span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">advertiseAddress</span><span class=\"token punctuation\">:</span> &lt;internal<span class=\"token punctuation\">-</span>ip<span class=\"token punctuation\">-</span>address<span class=\"token punctuation\">></span>\n<span class=\"token key atrule\">apiServerCertSANs</span><span class=\"token punctuation\">:</span>\n<span class=\"token punctuation\">-</span> &lt;public<span class=\"token punctuation\">-</span>ip<span class=\"token punctuation\">-</span>address<span class=\"token punctuation\">></span>\n<span class=\"token punctuation\">-</span> &lt;public<span class=\"token punctuation\">-</span>hostname<span class=\"token punctuation\">></span></code></pre></div>\n<p>在用 kubeadm 创建集群时采用命令即可</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubeadm init --config=init-config.yaml</code></pre></div>\n<h3 id=\"更新-hostname\" style=\"position:relative;\">更新 hostname<a href=\"#%E6%9B%B4%E6%96%B0-hostname\" aria-label=\"更新 hostname permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>首先先要说明一下，aws 的机器默认的 hostname 是和其 internal dns hostname 不同。默认的是这个样子：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ip-xx-xx-xx-xx</code></pre></div>\n<p>而 internal hostname 则是</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">ip-xx-xx-xx-xx.&lt;region>.compute.internal</code></pre></div>\n<p>之类的东西。而 aws kubernetes 需要通过这个 internal dns hostname 去定位 node 所以需要将 hostname 更改成这个。</p>\n<p>先前可以通过 `--hostname-override`` 参数覆盖默认的 aws hostname，但是最近似乎不行了，不如直接修改 hostname 一劳永逸。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">curl http://169.254.169.254/latest/meta-data/local-hostname > /etc/hostname</code></pre></div>\n<p>然后重启机器使得更新起效。</p>\n<h2 id=\"注意\" style=\"position:relative;\">注意<a href=\"#%E6%B3%A8%E6%84%8F\" aria-label=\"注意 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>如果一开始配置坏了需要重新配置那一定要 kubeadm reset 哦：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubeadm reset\nifconfig cni0 down\nip link delete cni0\nifconfig flannel.1 down\nip link delete flannel.1\nrm -rf /var/lib/cni/</code></pre></div>\n<p>因为我自己安装的 flannel 其他的要看情况修改哦。</p>\n<h2 id=\"相关资料\" style=\"position:relative;\">相关资料<a href=\"#%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99\" aria-label=\"相关资料 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ol>\n<li><a href=\"https://docs.google.com/document/d/17d4qinC_HnIwrK0GHnRlD1FKkTNdN__VO4TH9-EzbIY/edit#\">aws cloud provider</a></li>\n<li><a href=\"https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm/\">kubeadm</a></li>\n<li><a href=\"https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/\">kubeadm init</a></li>\n<li><a href=\"https://medium.com/jane-ai-engineering-blog/kubernetes-on-aws-6281e3a830fe\">Kubernetes on AWS</a></li>\n</ol>","fields":{"slug_without_date":"/kubeadm-aws-provider"}},{"id":"fce311d0-83c8-5ff2-962a-cfd5d2b0f3c2","frontmatter":{"title":"Ansible 一些 tips","date":"2018 April-16"},"html":"<p>Ansible 是一个自动化部署脚本，通过它可以让很多的 server 执行一系列相同的任务，是大规模集群管理的利器。虽然已经用了好久了，但是之前都没有记录一些使用的技巧。最近终于还是好好的记录了一些，免得自己以后忘得干干净净。</p>\n<h2 id=\"1-如何跳过第一次登陆一个机器时的授权\" style=\"position:relative;\">1. 如何跳过第一次登陆一个机器时的授权<a href=\"#1-%E5%A6%82%E4%BD%95%E8%B7%B3%E8%BF%87%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%99%BB%E9%99%86%E4%B8%80%E4%B8%AA%E6%9C%BA%E5%99%A8%E6%97%B6%E7%9A%84%E6%8E%88%E6%9D%83\" aria-label=\"1 如何跳过第一次登陆一个机器时的授权 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>我们创建一个新的机器第一次登陆的时候会显示如下的东西：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">ssh</span> root@xxx\n\nThe authenticity of <span class=\"token function\">host</span> <span class=\"token string\">'xxxx (xxxxx)'</span> can't be established.\nECDSA key fingerprint is SHA256:xxxx.\nAre you sure you want to <span class=\"token builtin class-name\">continue</span> connecting <span class=\"token punctuation\">(</span>yes/no<span class=\"token punctuation\">)</span>? </code></pre></div>\n<p>如果管理的机器很多，每次都要去确认一下肯定是要了命了。为了避免这种 popup 的问题有如下两种方式：</p>\n<ol>\n<li>\n<p>设置环境变量 <code>ANSIBLE_HOST_KEY_CHECKING=False</code></p>\n</li>\n<li>\n<p>在 ~/.ansible.cfg 或者 playbook 同目录下的配置文件增加</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">[defaults]\nhost_key_checking = False</code></pre></div>\n</li>\n</ol>\n<p><a href=\"https://stackoverflow.com/questions/32297456/how-to-ignore-ansible-ssh-authenticity-checking\">How to ignore ansible SSH authenticity checking? - Stack Overflow</a></p>\n<h2 id=\"2-使用-pem-文件访问机器\" style=\"position:relative;\">2. 使用 .pem 文件访问机器<a href=\"#2-%E4%BD%BF%E7%94%A8-pem-%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE%E6%9C%BA%E5%99%A8\" aria-label=\"2 使用 pem 文件访问机器 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-playbook -v <span class=\"token punctuation\">\\</span>\n  -i inventory <span class=\"token punctuation\">\\</span>\n  -u ubuntu --become <span class=\"token punctuation\">\\</span>\n  --private-key<span class=\"token operator\">=~</span>/.ssh/k8s.pem <span class=\"token punctuation\">\\</span>\n  nvidia-docker.yml</code></pre></div>\n<h2 id=\"3-展示更详细的日志\" style=\"position:relative;\">3. 展示更详细的日志<a href=\"#3-%E5%B1%95%E7%A4%BA%E6%9B%B4%E8%AF%A6%E7%BB%86%E7%9A%84%E6%97%A5%E5%BF%97\" aria-label=\"3 展示更详细的日志 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-playbook <span class=\"token punctuation\">..</span>. -vvvv <span class=\"token punctuation\">..</span>.</code></pre></div>\n<h2 id=\"4-使用-ansible-galaxy-初始化-role\" style=\"position:relative;\">4. 使用 ansible galaxy 初始化 role<a href=\"#4-%E4%BD%BF%E7%94%A8-ansible-galaxy-%E5%88%9D%E5%A7%8B%E5%8C%96-role\" aria-label=\"4 使用 ansible galaxy 初始化 role permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>Ansible 里面有一个很重要的概念叫做 role：一个 role 完成一个特定的任务，比如安装 docker、比如安装 nginx，之所以这么拆分当然是为了更好的重用：有些 role 是很多机器都需要的，细粒度的 role 就可以很好的组合在一起使用。比如在安装 kubernetes 集群时所有的机器都需要事先安装 docker，给所有的机器都添加 docker 的 role 即可。</p>\n<p>ansible 有一个 galaxy 有点像是 ansible 版的 github，它一方面提供了 role 的统一格式，另一方面提供了一个放置通用 role 的平台，方便大家去那里直接下载自己所需要的 role。</p>\n<p><code>ansible-galaxy</code> 提供了命令用来创建一个官方的 <code>role</code> 项目：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-galaxy init <span class=\"token punctuation\">[</span>your role name<span class=\"token punctuation\">]</span></code></pre></div>\n<h2 id=\"5-用-ansible-galaxy-获取所有的依赖\" style=\"position:relative;\">5. 用 ansible galaxy 获取所有的依赖<a href=\"#5-%E7%94%A8-ansible-galaxy-%E8%8E%B7%E5%8F%96%E6%89%80%E6%9C%89%E7%9A%84%E4%BE%9D%E8%B5%96\" aria-label=\"5 用 ansible galaxy 获取所有的依赖 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>前文提到 role 可以被复用。那么这里就是其复用的方法了。首先准备一个 <code>roles.yml</code> 文件：</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">src</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/xxx.git\n<span class=\"token punctuation\">-</span> <span class=\"token key atrule\">src</span><span class=\"token punctuation\">:</span> https<span class=\"token punctuation\">:</span>//github.com/xxx.git</code></pre></div>\n<p>其中每一项是需要使用的 <code>role</code> 的 git 地址。</p>\n<p>然后执行以下命令就可以将指定的 roles 下载到 <code>roles</code> 文件夹下使用了。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-galaxy <span class=\"token function\">install</span> -r roles.yml -p roles --force</code></pre></div>\n<h2 id=\"6-提供额外的参数\" style=\"position:relative;\">6. 提供额外的参数<a href=\"#6-%E6%8F%90%E4%BE%9B%E9%A2%9D%E5%A4%96%E7%9A%84%E5%8F%82%E6%95%B0\" aria-label=\"6 提供额外的参数 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>一些重要的变量是不能保存在 <code>ansible role</code> 脚本里面的，需要在运行的时候传入。这种场景下 <code>--extra-vars</code> 参数就登场了。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible-playbook --extra-vars<span class=\"token operator\">=</span><span class=\"token string\">\"@extravars.json\"</span> <span class=\"token punctuation\">..</span>.</code></pre></div>\n<p>其中 <code>extravars.json</code> 是一个 <code>json</code> 文件，通过 <code>@</code> 符号就可以传入。</p>\n<h2 id=\"7-ad-hoc-command\" style=\"position:relative;\">7. Ad-hoc command<a href=\"#7-ad-hoc-command\" aria-label=\"7 ad hoc command permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>有的时候发现原有的 ansible playbook 有瑕疵需要重新更改参数什么的，这个时候如果更新了 ansible playbook 再重新跑一遍实在不方便。这个时候就需要这种 ad-hoc command。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">ansible cpu-worker -i inventory -m copy -a <span class=\"token string\">'src=/etc/hosts dest=/tmp/hosts'</span> -u ubuntu --private-key<span class=\"token operator\">=</span>xxx</code></pre></div>\n<p>如上所示，和 <code>ansible-playbook</code> 一致 <code>-i</code> 后面是 inventory，<code>-u</code> 后面是 username，然后具体使用的 module 在 <code>-m</code> 后面提供，额外的参数用 <code>-a</code> 后面提供。</p>","fields":{"slug_without_date":"/ansible-tips"}}],"pageInfo":{"hasPreviousPage":true,"currentPage":14,"pageCount":43}}},"pageContext":{"limit":3,"skip":39}},
    "staticQueryHashes": []}