{"componentChunkName":"component---src-templates-blogs-js","path":"/page/20","result":{"data":{"blogs":{"nodes":[{"id":"6b299670-3f25-5d2f-aeca-95fcd6930e90","frontmatter":{"title":"自己对项目选择和心态的感想","date":"2012 March-16"},"html":"<p>前一阵子看了小平的一篇blog，会想到自己以前做的一些项目有感而发。</p>\n<p>导致一个结果的因素分主客观，客观因素是多事的客户，主观因素是自己的设计。两者的权重此消彼长，此长彼消。\n客户多事，需求反复修改，其实已经算是一个非常常见，几乎不能避免的事情。与其指望碰到好伺候的客户，不如自己在一开始就想好项目在哪里变更的几率大，做好设计，给自己留下后路。\n不过话说回来，设计也是成本，而且是很大的成本。面对紧张的开发时间，尤其是自己给自己带来的那种急切的开发完成的想法，总是敦促着自己快快着手开始编码。这与静下心来，好好写写设计以及开发流程什么的真的是难以调和的矛盾。而且，想做个好的设计也不单单是时间的问题。那真的需要自己仔仔细细的去想一想才行。有的时候，想的太复杂，封装层次太多，很可能没有这个必要，而且会让自己的初期开发反而更加麻烦。但是有的时候想的太简单，没有合适的结构，一遇到要修改的地方，实在是棘手。</p>\n<p>那么面对这么多种种乌七八糟的事情，应该怎么办呢？我自己有这样的一点想法，希望写下来留下罪证，以便自己以后可以回顾一下。</p>\n<p>第一，放弃不靠谱的项目。这是一个眼前利益，与长远发展的权衡。一个不靠谱的项目可能会让你身心俱损，但是依个人的责任感说，既然肯接，就一定会努力完成。就算是搓了点，累了点，但终究是会交差。起码做了一个就有一个的钱。不接，一分钱都没有。但是，我在想，真正的价值不仅仅是金钱，还有计算你所花费的时间，你所损耗的精力，以及其对你心态等等方方面面的影响。一个不靠谱的项目终究是会给你带来金钱（别告诉我没钱，咱们就不用这样讨论了不是）。但是，你耗费了大量的时间和精力。那这些时间和精力你还是可以去做很多其他事情的。你可以看书，可以上课，可以运动，可以很朋友同学出去玩，交流感情（要是一不小心，找到个女朋友，赚大了）。其实这些都不比内心满含怨念的写代码换来的RMB贱。很多东西是不能仅仅拿RMB衡量的。而且，用来看书和学习的时间是你厚积而薄发的基础，跬步的积累是真正爆发不可或缺的内容。如果项目靠谱，在获取金钱的同时也可以收获很多其他的内容，那当然是绝对不能错过的。但是，如果仅仅是为了挣点外快而勉强接受了一个自己一开始就觉得不靠谱的项目，那之后让自己捶胸顿足、夜夜熬战就是为了赚那么点钱实在就是得不偿失了。\n同样的，君子不立于危墙。应当在根源上根除不靠谱，一开始就来到了不靠谱的环境，今后有什么非同寻常又收效甚微的情况就属正常现象了。该离开时就离开，自己的生活，酸甜苦辣自己最清楚。</p>\n<p>第二，端正自己的心态，尤其是要积极的去调整自己的心态。我想来想去，很多事情，真的就是心态的问题。\n其实很多工作没有那么复杂，要改个功能什么的，算上自己的重构和设计方面的考虑，可能也不会花费那么多的时间。关键是内心的抵触情绪让自己难以立即着手工作。写程序的时候是最不能钻牛角尖的，总有那么一些时候就是有个什么bug搞不定，就是非要在那个时候搞定才罢休，但是那个时候的自己早就已经心浮气躁不能很好的去判断这个bug的原因了。盲目的消耗下去是不可取的。学会调整自己的心态，先休息一下，转而去做一些其他方面的东西没准儿会让自己突然想到bug的起因。</p>\n<p>工作应该是自己喜欢的事业，是能给自己带来快乐的，自己应该是更积极更主动的思考，而不是被动的接受别人的要求像机器一样运转。程序员本身就应该是很高端的工作，代码只是自己想法的实现，更重要的应该是自己的思考: 程序的思想，数据的结构，算法的实现。如果是仅仅是拿到别人的非常详细的需求然后\"翻译\"成相应的语言，那整个流程就全反了。</p>","fields":{"slug_without_date":"/e887aae5b7b1e5afb9e9a1b9e79baee98089e68ba9e5928ce5bf83e68081e79a84e6849fe683b3"}},{"id":"c4e1abcd-70c4-5052-bedd-dbd3c9cb7068","frontmatter":{"title":"一个用canvas画热力图的利器 heatmap.js","date":"2011 December-31"},"html":"<p>最近做的一个东西，需要以热力图的形式去展示数据。于是就想找一找热力图的算法。找到了很多生成热力图的工具，它们的算法几乎是一致的，都是首先用alpha透明度方式画发散的圆在页面上，然后利用一个调色板，把对应的透明度改成相应的颜色即可。</p>\n<p>一个很不错的中文的算法介绍在这里 <a href=\"http://huoding.com/2011/01/04/39\">浅谈Heatmap</a></p>\n<p>一个英文的在这里 <a href=\"http://blog.corunet.com/how-to-make-heat-maps/\">How to Make Heat Map</a></p>\n<p>虽说我本来打算的是找到算法自己去实现一下的，但是一不小心我发现万能的google在搜索记录里面给了我一个 <a href=\"http://www.patrick-wied.at/static/heatmapjs/\">heatmap.js</a> 的链接。我好奇的点进去发现这就是我所需要实现的东西...</p>\n<p><a href=\"http://aisensiy-wordpress.stor.sinaapp.com/uploads/2011/12/heatmap.png\"><img src=\"http://aisensiy-wordpress.stor.sinaapp.com/uploads/2011/12/heatmap-1024x537.png\" alt=\"\"></a></p>\n<p>heatmap.js可以使用canvas画出来一张漂亮的heatmap。更重要的是它支持数据的动态添加。比如，上图的演示就是一个利用mousemove事件生成heatmap的例子。它会自动的刷新canvas，实时显示鼠标运动的heatmap。</p>\n<p>打开heatmap.js发现里面的代码并不多，但是真的很精悍。</p>\n<p>页面代码请点击这里[<a href=\"https://github.com/pa7/heatmap.js/blob/master/heatmap.js\">heatmap.js</a>]，下面我做一个code的分析吧，看了那么久了，写下来一方面是自己加深记忆，另一方面就是可以更好的理清思路吧。[<a href=\"http://mindhacks.cn/2009/02/09/writing-is-better-thinking/\">写就是为了更好的思考</a>]么。</p>\n<p>code中包含两个主要的对象，store heatmap。store是heatmap的数据部分，算是model吧。而heatmap则是真正绘制图像的对象。heatmap部分可以被配置，可以自定义很多的内容，尤其是配色也是可以配置的，那么我们除了做出来正真的heatmap的效果之外还可以做出来各种各样不错的效果的。</p>\n<p>首先看看存储部分吧，比较简单，注释也比较清楚。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// store object constructor</span>\n<span class=\"token comment\">// a heatmap contains a store</span>\n<span class=\"token comment\">// the store has to know about the heatmap</span>\n<span class=\"token comment\">// in order to trigger heatmap updates when</span>\n<span class=\"token comment\">// datapoints get added</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">store</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">hmap</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> _ <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// data is a two dimensional array</span>\n        <span class=\"token comment\">// a datapoint gets saved as data[point-x-value][point-y-value]</span>\n        <span class=\"token comment\">// the value at [point-x-value][point-y-value]</span>\n        <span class=\"token comment\">// is the occurrence of the datapoint</span>\n        data<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// tight coupling of the heatmap object</span>\n        heatmap<span class=\"token operator\">:</span> hmap\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// the max occurrence - the heatmaps radial gradient</span>\n    <span class=\"token comment\">// alpha transition is based on it</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>max <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">get</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> _<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">set</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        _<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>在model里面，支持一次添加一个数据点。这也是heatmapjs支持实时绘制的关键。一旦max值有变化就会重新绘制整个canvas。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">addDataPoint</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> y <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> me <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n        heatmap <span class=\"token operator\">=</span> me<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"heatmap\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        data <span class=\"token operator\">=</span> me<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>data<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        data<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>data<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        data<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// if count parameter is set increment by count otherwise by 1</span>\n    data<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length     me<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// do we have a new maximum?</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>me<span class=\"token punctuation\">.</span>max <span class=\"token operator\">&lt;</span> data<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        me<span class=\"token punctuation\">.</span>max <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// max changed, we need to redraw all existing(lower) datapoints</span>\n        heatmap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"actx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">clearRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>heatmap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"width\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>heatmap<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"height\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> one <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> two <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">[</span>one<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                heatmap<span class=\"token punctuation\">.</span><span class=\"token function\">drawAlpha</span><span class=\"token punctuation\">(</span>one<span class=\"token punctuation\">,</span> two<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">[</span>one<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>two<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// @TODO</span>\n        <span class=\"token comment\">// implement feature</span>\n        <span class=\"token comment\">// heatmap.drawLegend(); ?</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    heatmap<span class=\"token punctuation\">.</span><span class=\"token function\">drawAlpha</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>y<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>下面就是画的部分了。这里是最重要的两个方法，drawAlpha colorize</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">drawAlpha</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> count</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// storing the variables because they will be often used</span>\n    <span class=\"token keyword\">var</span> me <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n        r1 <span class=\"token operator\">=</span> me<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"radiusIn\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        r2 <span class=\"token operator\">=</span> me<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"radiusOut\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        ctx <span class=\"token operator\">=</span> me<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"actx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        max <span class=\"token operator\">=</span> me<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// create a radial gradient with the defined parameters.</span>\n        <span class=\"token comment\">// we want to draw an alphamap</span>\n        rgr <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">createRadialGradient</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>r1<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>r2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        xb <span class=\"token operator\">=</span> x<span class=\"token operator\">-</span>r2<span class=\"token punctuation\">,</span> yb <span class=\"token operator\">=</span> y<span class=\"token operator\">-</span>r2<span class=\"token punctuation\">,</span> mul <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>r2<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// the center of the radial gradient has .1 alpha value</span>\n    rgr<span class=\"token punctuation\">.</span><span class=\"token function\">addColorStop</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rgba(0,0,0,'</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">/</span>me<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token string\">'0.1'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">')'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// and it fades out to 0</span>\n    rgr<span class=\"token punctuation\">.</span><span class=\"token function\">addColorStop</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rgba(0,0,0,0)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// drawing the gradient</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> rgr<span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span>xb<span class=\"token punctuation\">,</span>yb<span class=\"token punctuation\">,</span>mul<span class=\"token punctuation\">,</span>mul<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// finally colorize the area</span>\n    me<span class=\"token punctuation\">.</span><span class=\"token function\">colorize</span><span class=\"token punctuation\">(</span>xb<span class=\"token punctuation\">,</span>yb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>策略很简单，</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">rgr<span class=\"token punctuation\">.</span><span class=\"token function\">addColorStop</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rgba(0,0,0,'</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>count<span class=\"token punctuation\">)</span><span class=\"token operator\">?</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">/</span>me<span class=\"token punctuation\">.</span>store<span class=\"token punctuation\">.</span>max<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token string\">'0.1'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">')'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// and it fades out to 0</span>\nrgr<span class=\"token punctuation\">.</span><span class=\"token function\">addColorStop</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'rgba(0,0,0,0)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>利用当前点的count除以最大的count获取的结果做为alpha值。然后做一个RadialGradient画出来这个图就可以了。那么由于多个相近的点aphla效果的叠加就可以获取想要的效果了。这里就是canvas的nb之处了，看别的语言实现都是采用将一个这样的png图片画到画板上，但是canvas就可以直接实现这个效果。</p>\n<p><a href=\"http://aisensiy-wordpress.stor.sinaapp.com/uploads/2011/12/src_Tempest_plot.png\"><img src=\"http://aisensiy-wordpress.stor.sinaapp.com/uploads/2011/12/src_Tempest_plot.png\" alt=\"\"></a></p>\n<p>有了这幅aphla版本的heatmap 我们利用一个配送版做着色就大功告成了。</p>\n<p>这里又用到了上面所说的canvas的nb之处，在通常需要一个图片作为配色板的时候canvas可以自己做出来一个缓存起来。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function-variable function\">initColorPalette</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> me <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span>\n        canvas <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"canvas\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    canvas<span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token string\">\"1\"</span><span class=\"token punctuation\">;</span>\n    canvas<span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token string\">\"256\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> ctx <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"2d\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        grad <span class=\"token operator\">=</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">createLinearGradient</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    gradient <span class=\"token operator\">=</span> me<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gradient\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> x <span class=\"token keyword\">in</span> gradient<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        grad<span class=\"token punctuation\">.</span><span class=\"token function\">addColorStop</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> gradient<span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    ctx<span class=\"token punctuation\">.</span>fillStyle <span class=\"token operator\">=</span> grad<span class=\"token punctuation\">;</span>\n    ctx<span class=\"token punctuation\">.</span><span class=\"token function\">fillRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//这里太强大了，缓存了我的画板数据，然后删除了画板</span>\n    me<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"gradient\"</span><span class=\"token punctuation\">,</span> ctx<span class=\"token punctuation\">.</span><span class=\"token function\">getImageData</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">delete</span> canvas<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">delete</span> grad<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">delete</span> ctx<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>这种方式也给我们实现各种各样的配色提供了方便，我们只需要改变那个 <strong>gradient</strong> 就可以了。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i<span class=\"token operator\">=</span><span class=\"token number\">3</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">+=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>         <span class=\"token comment\">// [0] -> r, [1] -> g, [2] -> b, [3] -> alpha</span>\n    <span class=\"token keyword\">var</span> alpha <span class=\"token operator\">=</span> imageData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    offset <span class=\"token operator\">=</span> alpha<span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>offset<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// we ve started with i=3</span>\n    <span class=\"token comment\">// set the new r, g and b values</span>\n    <span class=\"token comment\">// 根据透明度选择配色板上的配色</span>\n    imageData<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>palette<span class=\"token punctuation\">[</span>offset<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    imageData<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>palette<span class=\"token punctuation\">[</span>offset<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    imageData<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>palette<span class=\"token punctuation\">[</span>offset<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// we want the heatmap to have a gradient from transparent to the colors</span>\n    <span class=\"token comment\">// as long as alpha is lower than the defined opacity (maximum),</span>\n    <span class=\"token comment\">// we'll use the alpha value</span>\n    imageData<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>alpha <span class=\"token operator\">&lt;</span> opacity<span class=\"token punctuation\">)</span><span class=\"token operator\">?</span>alpha<span class=\"token operator\">:</span>opacity<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>还是很简练的吧，看到heatmap.js的风格，真的像是在看一个不错的艺术品一样。强烈推荐一看~</p>","fields":{"slug_without_date":"/heatmapjs"}},{"id":"fb28720d-5c1f-51dd-b273-0c1ae0540147","frontmatter":{"title":"利用JS做抓取的demo","date":"2011 December-07"},"html":"<p>传统的爬虫模拟http请求获取页面没有办法模拟ajax请求，导致很多数据就难以获取。爬虫一直在试图把自己弄得像一个浏览器那样，可以处理各种诡异的情况。但是很遗憾，如果这个爬虫没有js解析的能力那怎么能够去处理ajax呢，如果爬虫不知道怎么渲染界面，它怎么知道什么元素是可见的，什么元素是不可见的呢。现在很多页面都是采用了前端脚本。乱七八糟的template里面是什么真正的数据都没有的。json里面的东西才是有意义的内容。所以，爬虫如果想完全处理那些问题，那它就要具备很多浏览器的功能了~</p>\n<p>但是，如果反过来怎么样呢？我们其实可以就用一个真真正正的浏览器去做这些工作的呀。我们可以让一个浏览器去模拟爬虫的抓取形式。当页面load完成后就可以获取页面的html内容了(innerHTML这样的东西)，然后检索整个页面上的合法Link 去一个个打开做递归...</p>\n<p>事实上，做爬虫很多时候就是想找到我们指定的一些数据。对页面里面很多乱七八糟的东西是没有兴趣的。可以只写js去定位一些元素里面的数据。当然，这会有很多的问题的。一个个打开，这样很慢的，效率是个问题。可是我觉得这的的确确是一个思路啊...</p>\n<p><a href=\"http://www.aisensiy.com/wp-content/uploads/2011/12/QQ%E6%88%AA%E5%9B%BE2011120719274111111111.png\"><img src=\"http://www.aisensiy.com/wp-content/uploads/2011/12/QQ%E6%88%AA%E5%9B%BE2011120719274111111111.png\" alt=\"\"></a></p>\n<p>这个控件里面是有ajax请求的，每次点击了一个城市，才会激发ajax请求获取数据。利用传统的方式，可能就要去找ajax的规律，然后利用规律一个个下载。但是我们用前端模拟点击事件，让页面自己按照常规的方式加载新的数据，然后从dom里面取到我们所需的内容就可以了</p>\n<p>这里我录了个屏，<a href=\"http://www.aisensiy.com/wp-content/uploads/2011/12/renren2.swf\">前端自动抓取demo</a>，由于尺寸比较大，就不插在文章里面了。请点击这个观看一段抓取的效果。当然，这仅仅是前端技术越发强大的冰山一角。我相信前端将会变得越发的强大以及越发的重要。</p>","fields":{"slug_without_date":"/e588a9e794a8jse5819ae68a93e58f96e79a84demo"}},{"id":"abad74bf-0b55-5bcc-ab09-c495028e7044","frontmatter":{"title":"我写的一个chrome的extension: Domain Time Tracker","date":"2011 August-09"},"html":"<p>Domain Time Tracker 是一个用于记录用户浏览页面时间的插件。其实差不多就是对FF下的<a href=\"https://addons.mozilla.org/en-US/firefox/addon/meetimer/\">MeeTimer</a>的山寨。</p>\n<p>一直对自己的工作学习效率不是很满意，可是又没有找到什么很有效的办法去有效果改善这种情况（当然，我知道其实对待这种事情没有什么捷径，我的意思其实是找到一个比较适合我的办法...）。在翻网页的时候不经意间发现了一个有关时间管理的博客，<a href=\"http://www.mifengtd.cn/\">褪墨</a>。其中有一些利用软件去更好的管理自己的时间和生活的方法。我感觉对于比较宅，天天对着电脑的我，这些工具显然比较有吸引力。博主介绍的一些软件中就有FF下的<a href=\"https://addons.mozilla.org/en-US/firefox/addon/meetimer/\">MeeTimer</a>。不过据我所知，<a href=\"https://addons.mozilla.org/en-US/firefox/addon/meetimer/\">MeeTimer</a>在FF3.0之后的版本就不能使用了(点击<a href=\"https://addons.mozilla.org/en-US/firefox/addon/meetimer/\">MeeTimer</a>，页面上的支持版本就是这个啦~，这就是\"据我所知\"的出处-_-)。而且我那那段时事件又感觉chrome所提供的开发extension的机制非常的棒~并且在当时的chrome app store里面也没有找到功能可以像<a href=\"https://addons.mozilla.org/en-US/firefox/addon/meetimer/\">MeeTimer</a>那样强大的页面浏览时间追踪插件。于是就萌生了在chrome写一个满足自己需求的页面浏览时间追踪插件的想法。</p>\n<!-- more -->\n<p>这个扩展功能比较简单，但是我自己用起来还不错。同时，由于google要开发者交那5美元入会费才能把应用放到app store。但在交钱之前选择所在地区时发现没有中国大陆同时我也木有信用卡，于是觉得暂时还是先放在自己网站这里吧。以后有了信用卡再去折腾把。</p>\n<p><strong>点这里下载：</strong><a href=\"http://www.aisensiy.com/dist.crx\">下载地址</a></p>\n<p>上面是说了我写这个扩展的动机。下面还是立即介绍下这个插件的功能吧，这才是重点。</p>\n<p><a href=\"http://www.aisensiy.com/wp-content/uploads/2011/08/chrome_ext1.jpg\"><img src=\"http://www.aisensiy.com/wp-content/uploads/2011/08/image.jpg\" alt=\"页面浏览时间追踪插件主界面\"></a>上图就是插件的主界面啦。虽然自己写这个东西写了相当久，但是其功能还是很简单的。主要就是根据域名统计用户在这个页面上停留的多长的时间。这里要强调一下所谓的\"停留时间\"是**用户把一个页面作为最前端页面，并且chrome在所有窗口出去最前面时的状态。并且，当插件发现用户在一个页面上停留时间超过1分钟并且对当前页面没有鼠标移动、按键点击等这些动作时，它会认为用户已经不再操纵计算机并停止计时。**也就是说，只有你真真正正的在看这个页面，在这个页面上时不时滑动鼠标，点击按键的时候这个扩展才会把所消耗的时间记录下来。</p>\n<p>插件有分组的功能。在软件运行之初，所有的域名被放在一个\"ungrouped\"的分组之中。用户可以点击主界面上面的\"Group Options\"去建立一个新的分组。返回主界面后，当鼠标移动到列表里的域名上时会显示一个对域名做分组的编辑窗口哦~一个域名是可以放在多个分组之中的。</p>\n<p><a href=\"http://www.aisensiy.com/wp-content/uploads/2011/08/chrome_ext2.png\"><img src=\"http://www.aisensiy.com/wp-content/uploads/2011/08/group_edit.png\" alt=\"页面浏览时间追踪插件 分组界面\"></a>使用方法就这些了<del>我一直觉得一个好的软件是不应该需要人去教才会用的。我也是本着这个理念去做这个小插件的。不求其功能一开始就非常完备，但求其看起来清清爽爽，干干净净，舒舒服服，让人装上它就是到它是干啥的。上面的讲解也主要是希望大家知道我所记录的时间到底是哪些时间</del></p>\n<p>当然，这个扩展还有很多可扩展的空间，还有很多功能需要改正。</p>\n<p>**同步功能：**我目前觉得比较恶心的就是所有的数据只是在本地保存，而我经常在Ubuntu和win7换来换去导致有两个不同的统计结果。好想把它做的像是chrome的同步功能那样，让我可以在两个chrome下看到的是一直的统计结果。而且同步的另一个巨大的好处是我可以让我的数据可以保存的非常久远，不会因为我ubuntu毫无缘由的崩溃而烟消云散。</p>\n<p>**查看更悠久数据：**说到长期统计下去就不得不说目前所能看到的统计时间窗口是非常有限的。最多看看上周的数据，或者看你全局的数据。但事实上，扩展中是统计了每天的数据的，需要我去写更多代码提供几个按钮罢了...</p>\n<p>**数据可视化：**如果能把每天看英语那个分组生成个曲线图或者把上个月的数据和这个月的数据用一个柱状图显示，便于看到上个月和这个月的数据对比该多好...是啊，我也想啊，这东东到目前为止就是我在用啦。只是要想办法画图罢了....canvas很强大，应该可以吧-_-</p>\n<p>最后再说一句，感觉这样从小东西着手，循序渐进开发的方式很不错。一开始就要做个很大的东西一方面会遇到很多障碍导致进度过慢，并逐渐丧失信心。另一方面，由于项目较大又耐心不足会导致东西粗制滥造，让自己失望。从一个小东西开始，可以让自己更专注而且有精力尽量做的规整一些，仔细一些。</p>\n<p>最后感慨一下~Google是不是彻底放弃中国了呢，连开发者们都抛弃了。其实我对Google没意见，不要酱紫啊T_T</p>","fields":{"slug_without_date":"/e68891e58699e79a84e4b880e4b8aachromee79a84extension-domain-time-tracker"}},{"id":"399c62f7-62df-538c-b7e2-41cc0df1f722","frontmatter":{"title":"[转]我在eeban的保研经历贴","date":"2011 June-04"},"html":"<p>当初保研成功，一时激情澎湃，思绪万缕，记得当时冲动的跑去图书馆打开notepad就开始敲这篇帖子，真的是非常的上心了。现在看看这篇帖子，反响还不错，转发到这里，作为一个存档吧，主要是给自己看吧(呵呵，也很少人看我的博客-_-)。<!-- more --></p>\n<blockquote>\n<p><a href=\"http://www.eeban.cn/viewthread.php?tid=72325\">http://www.eeban.cn/viewthread.php?tid=72325</a></p>\n</blockquote>\n<p>这都12月份了，现在才发offer贴并且开些写一些保研的经验是因为我一直是EE小学生，我发不了帖子...\n在这里记下一些东西，一方面是写给自己看的，毕竟保研这个事情真的是一波三折，自己也感慨万千。另一方面，当然希望自己的经历和体验能对其他人能有所帮助。</p>\n<p>我本来觉得自己是没机会保研的。我的成绩不是非常好，仅能拿到报送本校的名额的。但是由于我觉得我目前所在学校的优势学科并非自己所学的学科，同时考虑自己以后的发展方向，不太适合留在本校读研。于是，八月份，我开始了我的考研之路。每天早晨六点多起床做一个小时的公交地铁到北化去上政治考研班，对保研没有抱过什么奢望。\n但是大约八月中旬的时候却意外的得到消息，说自己以前所发的专利以及论文是可以尝试一下所谓的学术专长保研路线的。但我依然保持半信半疑的态度，在被各种不确定因素包围的情况下，我开始一边准备材料一边继续复习考研。\n八月底到九月底大约一个月的时间是我现在回想起来都觉得不可思议的日子。在八月底九月初，我给各种学校的各大计算机方向专业的老师们发出了我的保研意向请求，但是回复我的少之又少。同时，由于我在那个时候根本就没有确定自己能否拿到那个飘渺不定的保研资格，自己对所做的一切也底气不足，尝尝觉得自己毫无胜算，前途黯淡。\n不过生活就是这样，转折真的就在一瞬间。</p>\n<p>9.19号晚上，我接到老师的电话告诉我拿到了那个学术专长保研的资格。</p>\n<p>9.20号，这是清华北大递交保研材料的最后一天，在大部分人都觉得我没机会准备材料的时候，我花了一上午的时间把当初提交给北航的材料变成了提交给北大的材料，并在下午递交过去了。从早晨8点到下午3点，我跑了N个地方，盖了N个章，让N个领导给我签了字，我觉得那天是我脸皮最后的一天...</p>\n<p>9.21号，由于我提交北大的推荐信还没凑够，他们给了我一个机会让我在21号补交，在去北大补交材料的路上，有人给我打电话，说他们是北大计算机智能系做自然语言处理方面的，说我填报的志愿(信息挖掘)和他们的研究方向是非常相似的，如果愿意的话来面试，不然就刷掉我等别的方向的老师与我联系。我觉得这种问题让我别无选择啊T_T，难道我会让到手的鸭子飞了等下一只飞过来么。</p>\n<p>9.24号，机考，考得那个悲惨...</p>\n<p>9.25号，面试，在那么惨的机考的前提下，我觉得我没戏了...可我还是硬着头皮去了，可这就是那最戏剧性的一天。我的面试过程很顺利，大三我做了很多乌七八糟的项目，有论文有专利，老师们问我我一些项目中的细节，他们对我的回答似乎很满意，然后就开始介绍他们的系所，聊了一会儿就告诉我在外面等一会儿，马上就出结果。而最终的结果就像我在面试刚刚结束后的预期是一样的，我被录取了。</p>\n<hr>\n<p>说了那么多自己的经历，还是说点真正对大家有用的自己的看法吧。      这里要郑重说明一下，我是一个理工科的学生，我本科的专业是计算机科学，只能说我的感受是拘泥于理工科方面的，甚至是拘泥于单纯的信息类方向的，至于文科方面、经济学方面是怎样的情况我不敢妄加推断。</p>\n<p>首先，最主要的，你的材料一定要反映出你的能力，材料的形式不需要太拘泥于形式，个人的自述也不用非要找一个很规范的模版。但是事先你肯定是不太懂应该怎么去写的，借鉴别人的内容当然必不可少。\n从申请学校的正规材料中可以明显的表现出他们对一个优秀学生的定义是什么：你的成绩怎么样，你本科期间得过什么荣誉，你有什么样的科研经历，你的在科研方面取得了什么成果。你能把那个表格中的内容都填满么？如果不能，就快快去做些帮你填满它们事情吧~\n面试什么的并不可怕，别的不知道，起码我所经历的面试并不是非常残酷，真正残酷的应该在于材料的海选，如果你有幸得到面试的机会那么你的胜算就非常大了。而且，从另外几个我认识的报送到清华北大的同学那里了解到他们的情况和我是类似的。\n不要用别人的情况来判定自己，每个人的情况都不一样，他有的你没有，可你有的他也为必有。不要觉得看了别人的经历发现自己不具备他的条件而沮丧甚至放弃。\n永远不要“自杀”，脸皮要厚起来，不要觉得自己不行就不申请了，不要觉得北大不会要你什么的，对自己一定要有一个客观理性的评判。\n充分的学习与积累永远都是必要条件。在青年文摘上看到一篇文章，笔者的经历告诉他，其实那些目的性极强的行为往往得不到预期的结果，因为对于所有人来说，未来永远都是个未知数。但我还是觉得你现在所做的事情可能在具体的内容上不能完全决定你的未来，但是它一定会给你带来一个趋势、一个方向。凡是预则立，不预则废。而准备并只是说在申请的时候要好好的写写材料准备准备面试而已。什么成就都不是三五天就搞出来的。论文不是一天就写出来的，专利不是一天就做出来的，好成绩也不是一天就考出来的，甚至不论你到底最后要不要去保研，只要时间没有荒废，只要每天都有在学习、在做一些事情，那你的结果就一定不差的，天道酬勤，永远要相信这一点。\n还有的就是做事情要主动，要多打听消息，很多机遇错过是因为你根本就不知道它曾经有过。多联络老师，不要因为一次被拒就沮丧，其实你碰到合适的老师的同时也需要老师碰到你这个合适的学生。</p>\n<p>最后真心感谢那些曾经帮助过我的人，保研这个事情真的让我是大动干戈了，能骚扰的人我都骚扰了一遍了，谢谢你们的帮助</p>\n<p>这里又有对这篇文章的新的感受。\n最重要的一点，做什么事情一定要凭自己的爱好，有一份热情，有一份冲动。很多事情其实没有一个明确的终了的，一般都是\"日臻完善\"。你只要肯投入就一定有收获，很多事情并不是我们水平不够而是不上心，没有投入更多罢了。只有你自己非常喜欢的事情你才能天天去对着它，天天想办法让它更好。不然，事情变成了负担，开始磨洋工那就没有什么发展了。写这篇文章的时候就是很冲动的想去写并反复的审查修改才能很好的表达自己的观点，才能让自己回过头来觉得还不错~</p>","fields":{"slug_without_date":"/e8bdace68891e59ca8eebane79a84e4bf9de7a094e7bb8fe58e86e8b4b4"}}],"pageInfo":{"hasPreviousPage":true,"currentPage":20,"pageCount":22}}},"pageContext":{"limit":5,"skip":95}},"staticQueryHashes":[]}