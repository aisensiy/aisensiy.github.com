{"componentChunkName":"component---src-templates-blog-js","path":"/2022/01/26/clickhouse-operator-get-started/","result":{"data":{"blog":{"id":"d488f3b7-55be-5fa2-b384-68c41736b044","html":"<p>Production 级别的 clickhouse 不是随便就能搞出来的，需要对其有更深入的理解。这篇主题只是针对如何在 k8s 里快速搭建一还行的 clickhouse。主要是为了实现整个系统不对外有额外的依赖，所有的依赖服务都包含在 k8s 集群中。和 <a href=\"/mysql-operator\">将 MySQL 通过 presslabs/mysql-operator 部署到 k8s 内部</a> 这篇对于 mysql 的处理非常类似。</p>\n<h2 id=\"诉求\" style=\"position:relative;\">诉求<a href=\"#%E8%AF%89%E6%B1%82\" aria-label=\"诉求 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>之前用于测试的 clickhouse 是一非常随便的 deployment 实现，其主要缺点有如下几个：</p>\n<ol>\n<li>没有考虑如何修改配置，如果需要额外的配置只好自己想办法 mount 一个文件到指定路径</li>\n<li>没有初始化数据库的流程，只能自己手动去创建数据库</li>\n<li>不支持高可用，也无法扩容</li>\n</ol>\n<p>其中 3 的诉求并不强烈，毕竟在测试阶段对这部分的要求没有那么高，而且如果真的想要高可用可能甚至都不应该将 clickhouse 放进 k8s 里。不过 1 2 的诉求还是很强烈的。那么我这里的工作也都是针对 1 2 两项进行的。</p>\n<h2 id=\"方案\" style=\"position:relative;\">方案<a href=\"#%E6%96%B9%E6%A1%88\" aria-label=\"方案 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>这里采用了 <a href=\"https://github.com/Altinity/clickhouse-operator\">Altinity/clickhouse-operator</a> 这个方案。该方案不仅仅是完美解决了 1 2 两项问题，甚至是 3 也有做了还不错的处理。不过我这里就没有测试扩容和高可用了，主要测试的是 1 2 两部分。</p>\n<h3 id=\"安装-operator\" style=\"position:relative;\">安装 operator<a href=\"#%E5%AE%89%E8%A3%85-operator\" aria-label=\"安装 operator permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>按照<a href=\"https://github.com/Altinity/clickhouse-operator/blob/master/docs/quick_start.md\">文档</a>安装 operator:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-s</span> https://raw.githubusercontent.com/Altinity/clickhouse-operator/master/deploy/operator-web-installer/clickhouse-operator-install.sh <span class=\"token operator\">|</span> <span class=\"token assign-left variable\">OPERATOR_NAMESPACE</span><span class=\"token operator\">=</span>infra <span class=\"token function\">bash</span></code></pre></div>\n<p>这里我把 operator 安装的 namespace 放到了 infra。</p>\n<h3 id=\"提供部署-clickhouse-的-crd\" style=\"position:relative;\">提供部署 clickhouse 的 crd<a href=\"#%E6%8F%90%E4%BE%9B%E9%83%A8%E7%BD%B2-clickhouse-%E7%9A%84-crd\" aria-label=\"提供部署 clickhouse 的 crd permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ConfigMap\"</span>\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"serving-db-mounted-configmap\"</span>             <span class=\"token comment\"># [5]</span>\n<span class=\"token key atrule\">data</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">01_create_databases.sh</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">|</span><span class=\"token scalar string\">\n    #!/bin/bash\n    set -e\n    clickhouse client -n &lt;&lt;-EOSQL\n      CREATE DATABASE IF NOT EXISTS serving;\n    EOSQL</span>\n<span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"clickhouse.altinity.com/v1\"</span>\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ClickHouseInstallation\"</span>\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"serving-db\"</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">configuration</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">settings</span><span class=\"token punctuation\">:</span>                                      <span class=\"token comment\"># [5]</span>\n      <span class=\"token key atrule\">max_concurrent_queries</span><span class=\"token punctuation\">:</span> <span class=\"token number\">400</span>\n    <span class=\"token key atrule\">clusters</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"serving-db\"</span>\n        <span class=\"token key atrule\">layout</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">shardsCount</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n          <span class=\"token key atrule\">replicasCount</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1</span>\n  <span class=\"token key atrule\">defaults</span><span class=\"token punctuation\">:</span>                                       <span class=\"token comment\"># [1]</span>\n    <span class=\"token key atrule\">templates</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">podTemplate</span><span class=\"token punctuation\">:</span> pod<span class=\"token punctuation\">-</span>template\n      <span class=\"token key atrule\">dataVolumeClaimTemplate</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">-</span>volume<span class=\"token punctuation\">-</span>template\n      <span class=\"token key atrule\">logVolumeClaimTemplate</span><span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">-</span>volume<span class=\"token punctuation\">-</span>template\n      <span class=\"token key atrule\">serviceTemplate</span><span class=\"token punctuation\">:</span> svc<span class=\"token punctuation\">-</span>template\n  <span class=\"token key atrule\">templates</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">serviceTemplates</span><span class=\"token punctuation\">:</span>                             <span class=\"token comment\"># [2]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> svc<span class=\"token punctuation\">-</span>template\n        <span class=\"token key atrule\">generateName</span><span class=\"token punctuation\">:</span> clickhouse<span class=\"token punctuation\">-</span><span class=\"token punctuation\">{</span>chi<span class=\"token punctuation\">}</span>\n        <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">8123</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> tcp\n              <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9000</span>\n          <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP\n    <span class=\"token key atrule\">podTemplates</span><span class=\"token punctuation\">:</span>                                 <span class=\"token comment\"># [3]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> pod<span class=\"token punctuation\">-</span>template\n        <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> clickhouse\n              <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> yandex/clickhouse<span class=\"token punctuation\">-</span>server<span class=\"token punctuation\">:</span>22.1.3\n              <span class=\"token key atrule\">volumeMounts</span><span class=\"token punctuation\">:</span>\n                <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> serving<span class=\"token punctuation\">-</span>db<span class=\"token punctuation\">-</span>configmap<span class=\"token punctuation\">-</span>volume\n                  <span class=\"token key atrule\">mountPath</span><span class=\"token punctuation\">:</span> /docker<span class=\"token punctuation\">-</span>entrypoint<span class=\"token punctuation\">-</span>initdb.d\n          <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> serving<span class=\"token punctuation\">-</span>db<span class=\"token punctuation\">-</span>configmap<span class=\"token punctuation\">-</span>volume\n              <span class=\"token key atrule\">configMap</span><span class=\"token punctuation\">:</span>\n                <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> serving<span class=\"token punctuation\">-</span>db<span class=\"token punctuation\">-</span>mounted<span class=\"token punctuation\">-</span>configmap\n\n    <span class=\"token key atrule\">volumeClaimTemplates</span><span class=\"token punctuation\">:</span>                         <span class=\"token comment\"># [4]</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> data<span class=\"token punctuation\">-</span>volume<span class=\"token punctuation\">-</span>template\n        <span class=\"token key atrule\">reclaimPolicy</span><span class=\"token punctuation\">:</span> Retain\n        <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> local\n          <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> ReadWriteOnce\n          <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 50Gi\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> log<span class=\"token punctuation\">-</span>volume<span class=\"token punctuation\">-</span>template\n        <span class=\"token key atrule\">reclaimPolicy</span><span class=\"token punctuation\">:</span> Retain\n        <span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">storageClassName</span><span class=\"token punctuation\">:</span> local\n          <span class=\"token key atrule\">accessModes</span><span class=\"token punctuation\">:</span>\n            <span class=\"token punctuation\">-</span> ReadWriteOnce\n          <span class=\"token key atrule\">resources</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">requests</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">storage</span><span class=\"token punctuation\">:</span> 10Gi</code></pre></div>\n<p>这个 yaml 是我集成了自己的所有诉求的最终版本，可以看到它主要包含两个部分：</p>\n<ol>\n<li><code>serving-db-mounted-configmap</code> 其中包含了初始化数据库的内容，这部分不是必须要，只有需要初始化数据库的时候才有</li>\n<li><code>ClickHouseInstallation</code> 这个是 clickhouse operator 所提供的 crd 顾名思义，就用于创建 clickhouse 核心 crd。具体每一个东西什么意思还是看文档吧，我这里主要介绍下目前实现了上述诉求相关的内容</li>\n</ol>\n<p>我在上面做了注释标记（[1] 这样子），下面我一个个做介绍。</p>\n<ol>\n<li>可以看到 <code>defaults.templates</code> 下定义了一系列的模板（Template）其包含了\n<ol>\n<li><code>serviceTemplate</code>: 暴露 clickhouse 的 service 的结构</li>\n<li><code>podTemplate</code>: 创建 clickhouse 自身的 pod 的结构</li>\n<li><code>dataVolumeClaimTemplate</code>: 提供给 clickhouse 的存储的结构</li>\n</ol>\n</li>\n<li><code>serviceTemplate</code> 其默认的类型为 <code>LoadBalancer</code> 由于我们的集群里不支持也不希望使用这个类型，因此这里做了自定义将其修改为了 <code>ClusterIP</code></li>\n<li><code>podTemplate</code> 中首先选择 image 版本为 22.1.3 其次增加了一个额外的 volumeMounts 到路径 /docker-entrypoint-initdb.d 这样做是为了利用该 operator 所提供的钩子，实现数据库的初始，具体文档参见 <a href=\"https://github.com/Altinity/clickhouse-operator/blob/master/docs/chi-examples/02-templates-07-bootstrap-schema.yaml\">02-templates-07-bootstrap-schema.yaml</a></li>\n<li><code>volumeClaimTemplates</code> 分别定义了 clikchouse 的日志和数据的 PV</li>\n<li><code>configuration.settings</code> 可以自定义 clickhouse 的配置，这里我仅仅是修改了 <code>max_concurrent_queries</code> 这个配置，这里所写的配置最终会被合并到 clickhouse 的配置中</li>\n</ol>\n<h2 id=\"遇到的问题\" style=\"position:relative;\">遇到的问题<a href=\"#%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98\" aria-label=\"遇到的问题 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>clickhouse operator 很好的解决了我目前的两大诉求，不过在使用过程中也遇到了一个额外的问题：clickhouse 默认用户 default 无法通过 kubernete dns 去访问 clickhouse。仔细查看了下配置，发现其配置只支持 <code>&#x3C;service-name>.&#x3C;namespace>.svc.cluster.local</code> 的域名访问。这样做有两个明显的问题：</p>\n<ol>\n<li>无法使用类似于 <code>&#x3C;service-name>.&#x3C;namespace></code> 这样的 k8s 内支持的短域名访问</li>\n<li>如果我在创建 k8s 集群时就修改了默认的域名配置（即不采用 cluster.local），那么这域名是一定不起作用的，甚至可以认为这个配置是一个 bug</li>\n</ol>\n<p>解决的办法也很简单，就是不要用这个 <code>default</code> 用户，去创建一个新的用户并且设置可以访问的 ip 即可。</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E8%AF%89%E6%B1%82\">诉求</a></p>\n</li>\n<li>\n<p><a href=\"#%E6%96%B9%E6%A1%88\">方案</a></p>\n<ul>\n<li><a href=\"#%E5%AE%89%E8%A3%85-operator\">安装 operator</a></li>\n<li><a href=\"#%E6%8F%90%E4%BE%9B%E9%83%A8%E7%BD%B2-clickhouse-%E7%9A%84-crd\">提供部署 clickhouse 的 crd</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98\">遇到的问题</a></p>\n</li>\n</ul>","frontmatter":{"title":"尝试 clickhouse operator","date":"January 26, 2022","tags":["clickhouse","kubernetes","devops"]},"excerpt":"Production 级别的 clickhouse 不是随便就能搞出来的，需要对其有更深入的理解。…"}},"pageContext":{"id":"d488f3b7-55be-5fa2-b384-68c41736b044"}},"staticQueryHashes":["26522286"],"slicesMap":{}}