{"componentChunkName":"component---src-templates-blog-js","path":"/global-var-in-react","result":{"data":{"blog":{"id":"2ebe54fe-865b-521a-95c6-4823c6bdb0c6","html":"<p>虽然全局变量是一个不好的实践，但是很多时候处于方便性的考虑，还是在某些场景需要使用。这里就讲解一下在 react + webpack 场景下如何不提前引入就可以到处使用的全局变量的一个好的方案。</p>\n<h2 id=\"方法一：浏览器全局变量\" style=\"position:relative;\">方法一：浏览器全局变量<a href=\"#%E6%96%B9%E6%B3%95%E4%B8%80%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F\" aria-label=\"方法一：浏览器全局变量 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>首先，其实对于前端应用原本是跑在浏览器里的，我们自然会想到用 <code class=\"language-text\">window.global_var</code> 的方式去定义全局变量。但是这种方式有一个问题：如果我们有自己的一些组件展示视图（比如 storybook）以及一些组件测试的话，仅仅在 <code class=\"language-text\">index.js</code> 定义的这种全局变量需要在每一个展示体系下都去定义，而这些体系可未必有 <code class=\"language-text\">window</code>。</p>\n<h2 id=\"方法二：webpack-provideplugin\" style=\"position:relative;\">方法二：webpack ProvidePlugin<a href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C%EF%BC%9Awebpack-provideplugin\" aria-label=\"方法二：webpack provideplugin permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>第二种方法是采用 webpack 的 <code class=\"language-text\">ProvidePlugin</code> 让 webpack 打包时自动发现关键的全局变量并自动的引入。它是一种隐性的全局变量。代码如下所示：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  resolve<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    extensions<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'.js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.json'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    alias<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      Config<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'../src/utils/Config'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">ExtractTextPlugin</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"styles.css\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>ProvidePlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      Config<span class=\"token operator\">:</span> <span class=\"token string\">\"Config\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>首先通过 <code class=\"language-text\">resolve.alias</code> 为一个引入定义一个 shortcut。</li>\n<li>然后在 <code class=\"language-text\">plugins</code> 中通过 <code class=\"language-text\">webpack.ProvidePlugin</code> 定义相应的变量即可</li>\n</ol>\n<p><em>注意</em>，这里 <code class=\"language-text\">resolve.alias</code> 引入不支持 <code class=\"language-text\">export default</code> 的语法，只支持 <code class=\"language-text\">export</code>  以及 <code class=\"language-text\">module.exports</code> 的写法。</p>\n<h2 id=\"相关资料\" style=\"position:relative;\">相关资料<a href=\"#%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99\" aria-label=\"相关资料 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ol>\n<li><a href=\"https://doc.webpack-china.org/configuration/resolve/#resolve\">解析(Resolve)</a></li>\n<li><a href=\"https://doc.webpack-china.org/plugins/provide-plugin/#src/components/Sidebar/Sidebar.jsx\">ProvidePlugin</a></li>\n</ol>","tableOfContents":"<ul>\n<li><a href=\"#%E6%96%B9%E6%B3%95%E4%B8%80%EF%BC%9A%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F\">方法一：浏览器全局变量</a></li>\n<li><a href=\"#%E6%96%B9%E6%B3%95%E4%BA%8C%EF%BC%9Awebpack-provideplugin\">方法二：webpack ProvidePlugin</a></li>\n<li><a href=\"#%E7%9B%B8%E5%85%B3%E8%B5%84%E6%96%99\">相关资料</a></li>\n</ul>","frontmatter":{"title":" 在 react 项目中引入全局变量","date":"December 21, 2017"}}},"pageContext":{"id":"2ebe54fe-865b-521a-95c6-4823c6bdb0c6"}},"staticQueryHashes":[]}