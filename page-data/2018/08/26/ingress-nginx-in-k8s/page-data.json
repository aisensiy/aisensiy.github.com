{"componentChunkName":"component---src-templates-blog-js","path":"/2018/08/26/ingress-nginx-in-k8s/","result":{"data":{"blog":{"id":"3cca4327-4aa2-5d93-83b1-10f06ac73537","html":"<p>记录在采用 ingress-nginx 暴露内部服务的过程</p>\n<h2 id=\"安装\" style=\"position:relative;\">安装<a href=\"#%E5%AE%89%E8%A3%85\" aria-label=\"安装 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>ingress-nginx 是 ingress 的一个实现，目前它已经被放在 <code>kubernetes</code> 项目下面了，可见算是亲儿子了，可更新频率也非常高，再加上之前在别的环境用 nginx 的场景也很多，没想太多就觉得用它了。</p>\n<p>在我安装 ingress-nginx 的时候，其最新的版本是 <code>0.16.2</code>。首先遵循文档先安装 <a href=\"https://github.com/kubernetes/ingress-nginx/blob/nginx-0.16.2/deploy/mandatory.yaml\"><code>mandatory.yaml</code></a>：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl apply -f <span class=\"token punctuation\">\\</span>\n    https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.16.2/deploy/mandatory.yaml</code></pre></div>\n<p>这一步里面做了如下的事情：</p>\n<ol>\n<li>创建 <code>ingress-nginx</code> namespace</li>\n<li>部署默认的 backend</li>\n<li>创建相应的 ConfigMap</li>\n<li>创建 ServiceAccount 并授权</li>\n<li>部署 nginx-ingress-controller</li>\n</ol>\n<h2 id=\"创建-service-暴露到集群外部\" style=\"position:relative;\">创建 service 暴露到集群外部<a href=\"#%E5%88%9B%E5%BB%BA-service-%E6%9A%B4%E9%9C%B2%E5%88%B0%E9%9B%86%E7%BE%A4%E5%A4%96%E9%83%A8\" aria-label=\"创建 service 暴露到集群外部 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>这也是一个神奇的操作，虽说 ingress 才是真正将服务暴露到外面的资源，但是实际上反而是一个 <code>service</code> 完成了最终将服务暴露出去的任务。这里我们可以有多种选择：</p>\n<p>要么采用 <code>NodePort</code> 将 service 通过某一个特定的端口：</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> https\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span>\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx</code></pre></div>\n<p>要么采用 <code>externalIPS</code> 直接将 <code>service</code> 通过特定的 IP 暴露出去：</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">externalIPs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> &lt;external<span class=\"token punctuation\">-</span>ips<span class=\"token punctuation\">></span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span>\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> https\n    <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span>\n    <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">443</span>\n    <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> ingress<span class=\"token punctuation\">-</span>nginx</code></pre></div>\n<p>这里我采用的是第二种，这样暴露出来的服务更干净。</p>\n<p>然后测试一下看看是否工作：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">curl http://&lt;external-ip></code></pre></div>\n<p>如果返回 404 说明已经链接到了默认的 backend 了。</p>\n<h2 id=\"暴露服务到外部\" style=\"position:relative;\">暴露服务到外部<a href=\"#%E6%9A%B4%E9%9C%B2%E6%9C%8D%E5%8A%A1%E5%88%B0%E5%A4%96%E9%83%A8\" aria-label=\"暴露服务到外部 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>然后我们再创建一个 <code>ingress</code> 将我们的 java service 暴露到路径 <code>/api</code> 下：</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> extensions/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Ingress\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> openbayes<span class=\"token punctuation\">-</span>server<span class=\"token punctuation\">-</span>ing\n  <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">nginx.ingress.kubernetes.io/ssl-redirect</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /api\n        <span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">serviceName</span><span class=\"token punctuation\">:</span> openbayes<span class=\"token punctuation\">-</span>server<span class=\"token punctuation\">-</span>svc\n          <span class=\"token key atrule\">servicePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">kubectl apply -f ingress.yaml</code></pre></div>\n<p>然后再尝试一下 <code>curl http://&#x3C;external-ip>/api</code> 看看是不是可以正常的访问这个 api。</p>\n<h2 id=\"采用-annotation-对特定服务做配置\" style=\"position:relative;\">采用 annotation 对特定服务做配置<a href=\"#%E9%87%87%E7%94%A8-annotation-%E5%AF%B9%E7%89%B9%E5%AE%9A%E6%9C%8D%E5%8A%A1%E5%81%9A%E9%85%8D%E7%BD%AE\" aria-label=\"采用 annotation 对特定服务做配置 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>默认的 nginx 配置未必适合我们的服务，访问 <a href=\"https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/\">Nginx Configuration</a> 可以看到 ingress-nginx 所提供的三种 nginx 配置方式。其中 <a href=\"https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/\">ConfigMaps</a> 可以实现对 nginx 默认配置的修改；而 <a href=\"https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/annotations/\">ingress annotation</a> 则可以实现对特定 ingress 进行配置。</p>\n<p>比如我们的 <code>/api</code> 有上传文件的需求，而默认的请求尺寸最大为 <code>1m</code> 会导致文件上传报错 <code>413</code>，通过添加注解 <code>nginx.ingress.kubernetes.io/proxy-body-size</code> 可以指定请求大小限制：</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> extensions/v1beta1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Ingress\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> openbayes<span class=\"token punctuation\">-</span>server<span class=\"token punctuation\">-</span>ing\n  <span class=\"token key atrule\">annotations</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">nginx.ingress.kubernetes.io/proxy-body-size</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"1024m\"</span>\n    <span class=\"token key atrule\">nginx.ingress.kubernetes.io/ssl-redirect</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"false\"</span>\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /api\n        <span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">serviceName</span><span class=\"token punctuation\">:</span> openbayes<span class=\"token punctuation\">-</span>server<span class=\"token punctuation\">-</span>svc\n          <span class=\"token key atrule\">servicePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div>\n<p>每次修改 ingress 后，nginx-ingress-controller 会默认更新 nginx.conf，立即生效。</p>","tableOfContents":"<ul>\n<li><a href=\"#%E5%AE%89%E8%A3%85\">安装</a></li>\n<li><a href=\"#%E5%88%9B%E5%BB%BA-service-%E6%9A%B4%E9%9C%B2%E5%88%B0%E9%9B%86%E7%BE%A4%E5%A4%96%E9%83%A8\">创建 service 暴露到集群外部</a></li>\n<li><a href=\"#%E6%9A%B4%E9%9C%B2%E6%9C%8D%E5%8A%A1%E5%88%B0%E5%A4%96%E9%83%A8\">暴露服务到外部</a></li>\n<li><a href=\"#%E9%87%87%E7%94%A8-annotation-%E5%AF%B9%E7%89%B9%E5%AE%9A%E6%9C%8D%E5%8A%A1%E5%81%9A%E9%85%8D%E7%BD%AE\">采用 annotation 对特定服务做配置</a></li>\n</ul>","frontmatter":{"title":"采用 ingress-nginx 将服务暴露到外部","date":"August 25, 2018"},"excerpt":"记录在采用 ingress-nginx 暴露内部服务的过程 安装 ingress-nginx 是 …"}},"pageContext":{"id":"3cca4327-4aa2-5d93-83b1-10f06ac73537"}},"staticQueryHashes":["4202924991"]}